From ffc19ba7c23b72953283abb1f7dd086017a8f6a0 Mon Sep 17 00:00:00 2001
From: Jason Kridner <jdk@ti.com>
Date: Sun, 27 Dec 2015 22:01:38 +0000
Subject: [PATCH 2/3] Force OSD3358

---
 board/ti/am335x/board.c      | 20 ++++++++++++++++----
 board/ti/am335x/mux.c        |  7 +++++--
 include/configs/am335x_evm.h |  3 ++-
 3 files changed, 23 insertions(+), 7 deletions(-)

diff --git a/board/ti/am335x/board.c b/board/ti/am335x/board.c
index f56d17e..1439c2d 100644
--- a/board/ti/am335x/board.c
+++ b/board/ti/am335x/board.c
@@ -38,6 +38,11 @@ DECLARE_GLOBAL_DATA_PTR;
 /* GPIO that controls power to DDR on EVM-SK */
 #define GPIO_DDR_VTT_EN		7
 
+static inline int board_is_blank_osd3358(void)
+{
+	return 1;
+}
+
 #if defined(CONFIG_SPL_BUILD) || \
 	(defined(CONFIG_DRIVER_TI_CPSW) && !defined(CONFIG_DM_ETH))
 static struct ctrl_dev *cdev = (struct ctrl_dev *)CTRL_DEVICE_BASE;
@@ -232,7 +237,7 @@ void am33xx_spl_board_init(void)
 	/* Get the frequency */
 	dpll_mpu_opp100.m = am335x_get_efuse_mpu_max_freq(cdev);
 
-	if (board_is_bone(&header) || board_is_bone_lt(&header)) {
+	if (board_is_bone(&header) || board_is_bone_lt(&header) || board_is_blank_osd3358()) {
 		/* BeagleBone PMIC Code */
 		int usb_cur_lim;
 
@@ -266,7 +271,7 @@ void am33xx_spl_board_init(void)
 		 * Override what we have detected since we know if we have
 		 * a Beaglebone Black it supports 1GHz.
 		 */
-		if (board_is_bone_lt(&header))
+		if (board_is_bone_lt(&header) || board_is_blank_osd3358())
 			dpll_mpu_opp100.m = MPUPLL_M_1000;
 
 		/*
@@ -376,6 +381,8 @@ const struct dpll_params *get_dpll_ddr_params(void)
 
 	if (board_is_evm_sk(&header))
 		return &dpll_ddr_evm_sk;
+	else if (board_is_blank_osd3358())
+		return &dpll_ddr_osd3358;
 	else if (board_is_bone_lt(&header))
 		return &dpll_ddr_bone_black;
 	else if (board_is_evm_15_or_later(&header))
@@ -462,6 +469,11 @@ void sdram_init(void)
 	if (board_is_evm_sk(&header))
 		config_ddr(303, &ioregs_evmsk, &ddr3_data,
 			   &ddr3_cmd_ctrl_data, &ddr3_emif_reg_data, 0);
+	else if (board_is_blank_osd3358())
+		config_ddr(400, &ioregs_bonelt,
+			   &ddr3_osd3358_data,
+			   &ddr3_osd3358_cmd_ctrl_data,
+			   &ddr3_osd3358_emif_reg_data, 0);
 	else if (board_is_bone_lt(&header))
 		config_ddr(400, &ioregs_bonelt,
 			   &ddr3_beagleblack_data,
@@ -500,7 +512,7 @@ int board_late_init(void)
 	struct am335x_baseboard_id header;
 
 	if (read_eeprom(&header) < 0)
-		puts("Could not get board ID.\n");
+		puts("Could not get board ID, assuming OSD3358.\n");
 
 	/* Now set variables based on the header. */
 	strncpy(safe_string, (char *)header.name, sizeof(header.name));
@@ -628,7 +640,7 @@ int board_eth_init(bd_t *bis)
 		puts("Could not get board ID.\n");
 
 	if (board_is_bone(&header) || board_is_bone_lt(&header) ||
-	    board_is_idk(&header)) {
+	    board_is_idk(&header) || board_is_blank_osd3358()) {
 		writel(MII_MODE_ENABLE, &cdev->miisel);
 		cpsw_slaves[0].phy_if = cpsw_slaves[1].phy_if =
 				PHY_INTERFACE_MODE_MII;
diff --git a/board/ti/am335x/mux.c b/board/ti/am335x/mux.c
index 79ed02f..81f3a11 100644
--- a/board/ti/am335x/mux.c
+++ b/board/ti/am335x/mux.c
@@ -365,7 +365,10 @@ void enable_board_pin_mux(struct am335x_baseboard_id *header)
 		configure_module_pin_mux(mmc1_pin_mux);
 #endif
 	} else {
-		puts("Unknown board, cannot configure pinmux.");
-		hang();
+		puts("Unknown board: assuming OSD3358.");
+		configure_module_pin_mux(i2c1_pin_mux);
+		configure_module_pin_mux(mii1_pin_mux);
+		configure_module_pin_mux(mmc0_pin_mux);
+		configure_module_pin_mux(mmc1_pin_mux);
 	}
 }
diff --git a/include/configs/am335x_evm.h b/include/configs/am335x_evm.h
index c51db8c..0ee7693 100644
--- a/include/configs/am335x_evm.h
+++ b/include/configs/am335x_evm.h
@@ -97,7 +97,8 @@
 	func(DHCP, dhcp, na)
 
 #define CONFIG_BOOTCOMMAND \
-	"run findfdt; " \
+	"setenv fdtfile am335x-boneblack.dtb; " \
+	"setenv fdtbase am335x-boneblack; " \
 	"run distro_bootcmd"
 
 #include <config_distro_bootcmd.h>
-- 
1.9.1

