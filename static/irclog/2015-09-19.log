<li class="join">[<a href="#T00:00:42" id="T00:00:42"><abbr title="2015-09-19T00:00:42+00:00">00:00:42</abbr></a>] <span>* BeagleBot (~PircBot@ec2-50-17-196-130.compute-1.amazonaws.com) has joined #beagle</span></li>
<li class="topic">[<abbr title="2015-09-19T00:00:42+00:00">00:00:42</abbr>] <span>* Topic is '<a href="http://beagleboard.org/chat">http://beagleboard.org/chat</a> has a guide on how to ask questions and links to the logs | never ask to ask, just ask | be patient | pastebin a boot log | <a href="http://ahsoftware.de/Beaglebone_Black_Boot_explained.svg">http://ahsoftware.de/Beaglebone_Black_Boot_explained.svg</a> | <a href="http://beagleboard.org/latest-images">http://beagleboard.org/latest-images</a> | <a href="http://beagleboard.org/Support/bone101">http://beagleboard.org/Support/bone101</a> | direct bonescript/node.js questions to #beagle-bonescript | books: <a href="http://bit.ly/bbb-books'">http://bit.ly/bbb-books'</a></span></li>
<li class="topic">[<abbr title="2015-09-19T00:00:42+00:00">00:00:42</abbr>] <span>* Set by KotH!~attila@erica.kinali.ch on Wed Jul 15 13:55:07 UTC 2015</span></li>
<li class="join">[<abbr title="2015-09-19T00:00:42+00:00">00:00:42</abbr>] <span>* BeagleBot (~PircBot@ec2-50-17-196-130.compute-1.amazonaws.com) has joined #beagleboard</span></li>
<li class="join">[<abbr title="2015-09-19T00:00:42+00:00">00:00:42</abbr>] <span>* BeagleBot (~PircBot@ec2-50-17-196-130.compute-1.amazonaws.com) has joined #beaglebone</span></li>
<li class="join">[<a href="#T00:06:00" id="T00:06:00"><abbr title="2015-09-19T00:06:00+00:00">00:06:00</abbr></a>] <span>* night_mare (49990a1f@gateway/web/freenode/ip.73.153.10.31) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:12:06" id="T00:12:06"><abbr title="2015-09-19T00:12:06+00:00">00:12:06</abbr></a>] <span>* night_mare (49990a1f@gateway/web/freenode/ip.73.153.10.31) Quit (Ping timeout: 246 seconds)</span></li>
<li class="message">[<a href="#T00:21:13" id="T00:21:13"><abbr title="2015-09-19T00:21:13+00:00">00:21:13</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>rcn-ee: btw, I noticed you switched to the -ti kernel as default rather than the -bone ... what are the pros/cons ?</q></li>
<li class="quit">[<a href="#T00:24:40" id="T00:24:40"><abbr title="2015-09-19T00:24:40+00:00">00:24:40</abbr></a>] <span>* idwer (~irc@unaffiliated/idwer) Quit (Remote host closed the connection)</span></li>
<li class="message">[<a href="#T00:25:24" id="T00:25:24"><abbr title="2015-09-19T00:25:24+00:00">00:25:24</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>right now... more eye's on it.. (ti.com)  and i'm shooting for a shared kernel between the x15/bb(w/b/g)...</q></li>
<li class="message">[<a href="#T00:26:08" id="T00:26:08"><abbr title="2015-09-19T00:26:08+00:00">00:26:08</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>but all the overlays stuff we've done with v4.1.x-ti has been copied to v4.1.x-bone/v4.1.x-bone-rt/v4.2.x-bone/v4.3.x-bone. ;)</q></li>
<li class="message">[<a href="#T00:26:38" id="T00:26:38"><abbr title="2015-09-19T00:26:38+00:00">00:26:38</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>I thought overlays made it to mainline?</q></li>
<li class="message">[<a href="#T00:28:00" id="T00:28:00"><abbr title="2015-09-19T00:28:00+00:00">00:28:00</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>(though tbh I normally never use them anyway)</q></li>
<li class="message">[<a href="#T00:28:21" id="T00:28:21"><abbr title="2015-09-19T00:28:21+00:00">00:28:21</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>well... we are down to 29 (smallish) patches: <a href="https://github.com/RobertCNelson/linux-dev/blob/master/patch.sh#L343-L377">https://github.com/RobertCNelson/linux-dev/blob/master/patch.sh#L343-L377</a></q></li>
<li class="message">[<a href="#T00:28:31" id="T00:28:31"><abbr title="2015-09-19T00:28:31+00:00">00:28:31</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>and the dtc compiler changes are under review...</q></li>
<li class="message">[<a href="#T00:28:37" id="T00:28:37"><abbr title="2015-09-19T00:28:37+00:00">00:28:37</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>so we are damn close. ;)</q></li>
<li class="message">[<a href="#T00:29:15" id="T00:29:15"><abbr title="2015-09-19T00:29:15+00:00">00:29:15</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>merging the etnaviv looks like a bigger pain then capemanager right now..</q></li>
<li class="message">[<a href="#T00:29:57" id="T00:29:57"><abbr title="2015-09-19T00:29:57+00:00">00:29:57</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yeah I actually got my own dtc on github that merged the upstream dtc changes with overlays and some fixes of personal annoyances</q></li>
<li class="join">[<abbr title="2015-09-19T00:29:57+00:00">00:29:57</abbr>] <span>* eme (~eme@cpe-76-185-1-35.tx.res.rr.com) has joined #beagleboard</span></li>
<li class="join">[<a href="#T00:30:01" id="T00:30:01"><abbr title="2015-09-19T00:30:01+00:00">00:30:01</abbr></a>] <span>* eme (~eme@cpe-76-185-1-35.tx.res.rr.com) has joined #beaglebone</span></li>
<li class="message">[<a href="#T00:31:32" id="T00:31:32"><abbr title="2015-09-19T00:31:32+00:00">00:31:32</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>the dtc is probally the most important issue, the 3.8 vs 4.1+ abi is different, so whatever gets pushed to dtc git, i'd like to make sure v4.1 works with that..</q></li>
<li class="join">[<a href="#T00:35:39" id="T00:35:39"><abbr title="2015-09-19T00:35:39+00:00">00:35:39</abbr></a>] <span>* dastaan (~dastaan@150.107.254.67) has joined #beagle</span></li>
<li class="message">[<a href="#T00:35:45" id="T00:35:45"><abbr title="2015-09-19T00:35:45+00:00">00:35:45</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>well the ones my dtc produces worked... assuming the abi different is something obvious and not some subtle corner case.  I derive from pantoniou/dt-overlays5</q></li>
<li class="message">[<a href="#T00:35:54" id="T00:35:54"><abbr title="2015-09-19T00:35:54+00:00">00:35:54</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>*abi difference</q></li>
<li class="message">[<a href="#T00:36:42" id="T00:36:42"><abbr title="2015-09-19T00:36:42+00:00">00:36:42</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>but it's good to know, something those still using 3.8 need to be mindful of</q></li>
<li class="message">[<a href="#T00:37:18" id="T00:37:18"><abbr title="2015-09-19T00:37:18+00:00">00:37:18</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>Yeah that version is fine..  if you decompile a dtbo from the 3.8 era vs the current dtc builds, you'll notice an extra "tree" it's suppost to help the kernel overlays find the node..</q></li>
<li class="message">[<a href="#T00:39:35" id="T00:39:35"><abbr title="2015-09-19T00:39:35+00:00">00:39:35</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>btw, since you've applied the cpsw patch that fixes the interrupt handling code to not blindly assume both interfaces exist, you can now set  slaves = &lt;1&gt;;  in the ethernet node to get rid of the phy not found error at boot</q></li>
<li class="message">[<a href="#T00:39:52" id="T00:39:52"><abbr title="2015-09-19T00:39:52+00:00">00:39:52</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>humm, panto's looking at useing extcon, <a href="https://github.com/pantoniou/linux-beagle-track-mainline/commit/7d456c34d3e024602da33cdfd971fdf0ba735b0c">https://github.com/pantoniou/linux-beagle-track-mainline/commit/7d456c34d3e024602da33cdfd971fdf0ba735b0c</a>  wonder if extcon supports live changes.. (that might be cape-universal)</q></li>
<li class="quit">[<a href="#T00:40:20" id="T00:40:20"><abbr title="2015-09-19T00:40:20+00:00">00:40:20</abbr></a>] <span>* dastaan (~dastaan@150.107.254.67) Quit (Ping timeout: 250 seconds)</span></li>
<li class="message">[<a href="#T00:40:43" id="T00:40:43"><abbr title="2015-09-19T00:40:43+00:00">00:40:43</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>zmatt, does the 2nd mac address still populate under /sys when you do that?</q></li>
<li class="message">[<a href="#T00:41:12" id="T00:41:12"><abbr title="2015-09-19T00:41:12+00:00">00:41:12</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>ehh, where?</q></li>
<li class="quit">[<a href="#T00:41:30" id="T00:41:30"><abbr title="2015-09-19T00:41:30+00:00">00:41:30</abbr></a>] <span>* mrjazzcat (~mrjazzcat@c-50-134-253-3.hsd1.co.comcast.net) Quit (Ping timeout: 255 seconds)</span></li>
<li class="message">[<a href="#T00:42:03" id="T00:42:03"><abbr title="2015-09-19T00:42:03+00:00">00:42:03</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>(you know each am335x actually has 3 MAC addresses allocated?)</q></li>
<li class="message">[<a href="#T00:42:11" id="T00:42:11"><abbr title="2015-09-19T00:42:11+00:00">00:42:11</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>err: /proc/device-tree/ocp/ethernet@4a100000/slave@4a100300/mac-address</q></li>
<li class="message">[<a href="#T00:42:42" id="T00:42:42"><abbr title="2015-09-19T00:42:42+00:00">00:42:42</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>there's a third? i've been using the 1st/2nd to generate a fake third.. (the g_ether needs two mac's)</q></li>
<li class="message">[<a href="#T00:42:58" id="T00:42:58"><abbr title="2015-09-19T00:42:58+00:00">00:42:58</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yeah, 3 consecutive numbers</q></li>
<li class="message">[<a href="#T00:43:39" id="T00:43:39"><abbr title="2015-09-19T00:43:39+00:00">00:43:39</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>and in /proc/device-tree ?  is u-boot populating that then?</q></li>
<li class="message">[<a href="#T00:43:51" id="T00:43:51"><abbr title="2015-09-19T00:43:51+00:00">00:43:51</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>that's just the kernel..</q></li>
<li class="message">[<a href="#T00:44:47" id="T00:44:47"><abbr title="2015-09-19T00:44:47+00:00">00:44:47</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>CONFIG_PROC_DEVICETREE has to be enabled..</q></li>
<li class="message">[<a href="#T00:45:28" id="T00:45:28"><abbr title="2015-09-19T00:45:28+00:00">00:45:28</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yeah I know, but I mean /proc/device-tree just shows the DT as the kernel got it, so if the mac-address property is there yet not in the DT source then u-boot must be adding it</q></li>
<li class="message">[<a href="#T00:46:48" id="T00:46:48"><abbr title="2015-09-19T00:46:48+00:00">00:46:48</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>kernel populates that: <a href="https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/drivers/net/ethernet/ti/cpsw-common.c">https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/drivers/net/ethernet/ti/cpsw-common.c</a></q></li>
<li class="message">[<a href="#T00:48:28" id="T00:48:28"><abbr title="2015-09-19T00:48:28+00:00">00:48:28</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>that code is still not populating anything in DT though</q></li>
<li class="message">[<a href="#T00:48:56" id="T00:48:56"><abbr title="2015-09-19T00:48:56+00:00">00:48:56</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>the kernel reading the MAC address from hw doesn't exclude u-boot from doing the same (especially since it has network support)</q></li>
<li class="quit">[<a href="#T00:48:58" id="T00:48:58"><abbr title="2015-09-19T00:48:58+00:00">00:48:58</abbr></a>] <span>* drkfdr_nl (~darkfader@ip3e8346be.speed.planet.nl) Quit (Quit: drkfdr_nl)</span></li>
<li class="message">[<a href="#T00:49:37" id="T00:49:37"><abbr title="2015-09-19T00:49:37+00:00">00:49:37</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>probe of cpsw, it get's it: <a href="https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/drivers/net/ethernet/ti/cpsw.c#n2056">https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/drivers/net/ethernet/ti/cpsw.c#n2056</a></q></li>
<li class="join">[<a href="#T00:51:08" id="T00:51:08"><abbr title="2015-09-19T00:51:08+00:00">00:51:08</abbr></a>] <span>* dastaan (~dastaan@150.107.254.67) has joined #beagle</span></li>
<li class="message">[<a href="#T00:51:19" id="T00:51:19"><abbr title="2015-09-19T00:51:19+00:00">00:51:19</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>of course, if you set it in u-boot, the kernel will just use that value...</q></li>
<li class="message">[<a href="#T00:51:27" id="T00:51:27"><abbr title="2015-09-19T00:51:27+00:00">00:51:27</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>it's still just fetching data, not mutating DT</q></li>
<li class="message">[<a href="#T00:51:32" id="T00:51:32"><abbr title="2015-09-19T00:51:32+00:00">00:51:32</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>but</q></li>
<li class="message">[<a href="#T00:51:35" id="T00:51:35"><abbr title="2015-09-19T00:51:35+00:00">00:51:35</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>why are things caring about the mac address?</q></li>
<li class="message">[<a href="#T00:51:58" id="T00:51:58"><abbr title="2015-09-19T00:51:58+00:00">00:51:58</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>in any case, it seems I only have one slave node</q></li>
<li class="message">[<a href="#T00:52:05" id="T00:52:05"><abbr title="2015-09-19T00:52:05+00:00">00:52:05</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>ds2, zmatt got me interested in their being a 3rd. ;)</q></li>
<li class="action">[<a href="#T00:52:32" id="T00:52:32"><abbr title="2015-09-19T00:52:32+00:00">00:52:32</abbr></a>] <span>* zmatt looks up the relevant reference</span></li>
<li class="message">[<a href="#T00:53:13" id="T00:53:13"><abbr title="2015-09-19T00:53:13+00:00">00:53:13</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>and we should be able to get rid of that "phy not found error at boot" ;)</q></li>
<li class="message">[<a href="#T00:53:48" id="T00:53:48"><abbr title="2015-09-19T00:53:48+00:00">00:53:48</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>blah</q></li>
<li class="message">[<a href="#T00:54:44" id="T00:54:44"><abbr title="2015-09-19T00:54:44+00:00">00:54:44</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>although it's been a few weeks since i got a "phy not found"  email...</q></li>
<li class="message">[<a href="#T00:55:08" id="T00:55:08"><abbr title="2015-09-19T00:55:08+00:00">00:55:08</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>slaves = &lt;1&gt;;  is the correct solution</q></li>
<li class="quit">[<a href="#T00:55:29" id="T00:55:29"><abbr title="2015-09-19T00:55:29+00:00">00:55:29</abbr></a>] <span>* dastaan (~dastaan@150.107.254.67) Quit (Ping timeout: 246 seconds)</span></li>
<li class="message">[<a href="#T00:55:39" id="T00:55:39"><abbr title="2015-09-19T00:55:39+00:00">00:55:39</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>since there really is only one mii port in use (which is what they mean by that)</q></li>
<li class="message">[<a href="#T00:56:36" id="T00:56:36"><abbr title="2015-09-19T00:56:36+00:00">00:56:36</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>argh, why can't I find it anymore</q></li>
<li class="message">[<a href="#T00:56:56" id="T00:56:56"><abbr title="2015-09-19T00:56:56+00:00">00:56:56</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>too many 3000 pages docs.</q></li>
<li class="message">[<a href="#T00:57:04" id="T00:57:04"><abbr title="2015-09-19T00:57:04+00:00">00:57:04</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>isn't that the address on that 2 wire serial bus?</q></li>
<li class="message">[<a href="#T00:57:09" id="T00:57:09"><abbr title="2015-09-19T00:57:09+00:00">00:57:09</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>mdio</q></li>
<li class="message">[<a href="#T00:57:12" id="T00:57:12"><abbr title="2015-09-19T00:57:12+00:00">00:57:12</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>no</q></li>
<li class="message">[<a href="#T00:57:50" id="T00:57:50"><abbr title="2015-09-19T00:57:50+00:00">00:57:50</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>oh then it must refer to the hardware port used?</q></li>
<li class="message">[<a href="#T00:57:53" id="T00:57:53"><abbr title="2015-09-19T00:57:53+00:00">00:57:53</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>rcn-ee: what's the delta between the two addresses on one device?</q></li>
<li class="message">[<a href="#T00:58:04" id="T00:58:04"><abbr title="2015-09-19T00:58:04+00:00">00:58:04</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>ds2: MAC address is the 6-byte globally unique thing</q></li>
<li class="message">[<a href="#T00:58:37" id="T00:58:37"><abbr title="2015-09-19T00:58:37+00:00">00:58:37</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>zmatt: eh? MAC addresses do not have to be globally unique (see locally admin. bit)</q></li>
<li class="message">[<a href="#T00:58:51" id="T00:58:51"><abbr title="2015-09-19T00:58:51+00:00">00:58:51</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>e4 &gt; e6...</q></li>
<li class="message">[<a href="#T00:58:52" id="T00:58:52"><abbr title="2015-09-19T00:58:52+00:00">00:58:52</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>ds2: yeah ok</q></li>
<li class="message">[<a href="#T00:58:59" id="T00:58:59"><abbr title="2015-09-19T00:58:59+00:00">00:58:59</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>is the third between?</q></li>
<li class="message">[<a href="#T00:59:01" id="T00:59:01"><abbr title="2015-09-19T00:59:01+00:00">00:59:01</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>rcn-ee: bingo</q></li>
<li class="message">[<a href="#T00:59:12" id="T00:59:12"><abbr title="2015-09-19T00:59:12+00:00">00:59:12</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>rcn-ee: it indicates the range reserved for the device</q></li>
<li class="message">[<a href="#T00:59:21" id="T00:59:21"><abbr title="2015-09-19T00:59:21+00:00">00:59:21</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>ah!.. cool</q></li>
<li class="message">[<a href="#T00:59:23" id="T00:59:23"><abbr title="2015-09-19T00:59:23+00:00">00:59:23</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>but I'm still trying to figure out where I read that</q></li>
<li class="message">[<a href="#T00:59:40" id="T00:59:40"><abbr title="2015-09-19T00:59:40+00:00">00:59:40</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>so we always assume, x, x+1, &amp; x+2?</q></li>
<li class="message">[<a href="#T00:59:48" id="T00:59:48"><abbr title="2015-09-19T00:59:48+00:00">00:59:48</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>on am335x...</q></li>
<li class="message">[<a href="#T01:01:00" id="T01:01:00"><abbr title="2015-09-19T01:01:00+00:00">01:01:00</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yes</q></li>
<li class="message">[<a href="#T01:01:11" id="T01:01:11"><abbr title="2015-09-19T01:01:11+00:00">01:01:11</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>it's probably no coincidence either that 0xe4 % 3 == 0</q></li>
<li class="message">[<a href="#T01:01:27" id="T01:01:27"><abbr title="2015-09-19T01:01:27+00:00">01:01:27</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>or it might be, who knows</q></li>
<li class="quit">[<a href="#T01:02:04" id="T01:02:04"><abbr title="2015-09-19T01:02:04+00:00">01:02:04</abbr></a>] <span>* calculus (~calculus@gentoo/user/calculus) Quit (Ping timeout: 268 seconds)</span></li>
<li class="message">[<a href="#T01:02:06" id="T01:02:06"><abbr title="2015-09-19T01:02:06+00:00">01:02:06</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>it is</q></li>
<li class="join">[<a href="#T01:02:21" id="T01:02:21"><abbr title="2015-09-19T01:02:21+00:00">01:02:21</abbr></a>] <span>* calculus (~calculus@adsl-76-254-63-156.dsl.pltn13.sbcglobal.net) has joined #beagle</span></li>
<li class="quit">[<abbr title="2015-09-19T01:02:21+00:00">01:02:21</abbr>] <span>* calculus (~calculus@adsl-76-254-63-156.dsl.pltn13.sbcglobal.net) Quit (Changing host)</span></li>
<li class="join">[<abbr title="2015-09-19T01:02:21+00:00">01:02:21</abbr>] <span>* calculus (~calculus@gentoo/user/calculus) has joined #beagle</span></li>
<li class="mode">[<abbr title="2015-09-19T01:02:21+00:00">01:02:21</abbr>] <span>* ChanServ sets mode +o calculus</span></li>
<li class="message">[<a href="#T01:04:52" id="T01:04:52"><abbr title="2015-09-19T01:04:52+00:00">01:04:52</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>rcn-ee: you can of course also just read those two addresses from the control module... it's portable at least across the whole dm81xx/am33xx/am43xx/dra6xx family</q></li>
<li class="message">[<a href="#T01:05:21" id="T01:05:21"><abbr title="2015-09-19T01:05:21+00:00">01:05:21</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>the range covered varies though... dm814x only has two addresses</q></li>
<li class="join">[<a href="#T01:05:52" id="T01:05:52"><abbr title="2015-09-19T01:05:52+00:00">01:05:52</abbr></a>] <span>* dastaan (~dastaan@150.107.254.67) has joined #beagle</span></li>
<li class="message">[<a href="#T01:06:16" id="T01:06:16"><abbr title="2015-09-19T01:06:16+00:00">01:06:16</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>we could generate a locally admin address based on the board S/N</q></li>
<li class="message">[<a href="#T01:06:33" id="T01:06:33"><abbr title="2015-09-19T01:06:33+00:00">01:06:33</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>you can also just generally a locally admin address by picking one at random</q></li>
<li class="message">[<a href="#T01:06:54" id="T01:06:54"><abbr title="2015-09-19T01:06:54+00:00">01:06:54</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>due to the problem of DHCP, a persistant address is needed</q></li>
<li class="message">[<a href="#T01:07:01" id="T01:07:01"><abbr title="2015-09-19T01:07:01+00:00">01:07:01</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>then windows/systemd users have fun issues... (if it's random between reboots) ;)</q></li>
<li class="message">[<a href="#T01:07:07" id="T01:07:07"><abbr title="2015-09-19T01:07:07+00:00">01:07:07</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>ah</q></li>
<li class="message">[<a href="#T01:07:14" id="T01:07:14"><abbr title="2015-09-19T01:07:14+00:00">01:07:14</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>systemd users can be fixed</q></li>
<li class="message">[<a href="#T01:07:20" id="T01:07:20"><abbr title="2015-09-19T01:07:20+00:00">01:07:20</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>windows just needs to be disposed of.</q></li>
<li class="message">[<a href="#T01:07:22" id="T01:07:22"><abbr title="2015-09-19T01:07:22+00:00">01:07:22</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>it's too late for them. ;)</q></li>
<li class="message">[<a href="#T01:07:32" id="T01:07:32"><abbr title="2015-09-19T01:07:32+00:00">01:07:32</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>systemd users are in YOUR hands :P</q></li>
<li class="action">[<a href="#T01:07:43" id="T01:07:43"><abbr title="2015-09-19T01:07:43+00:00">01:07:43</abbr></a>] <span>* ds2 pets good old SysV init</span></li>
<li class="message">[<a href="#T01:07:44" id="T01:07:44"><abbr title="2015-09-19T01:07:44+00:00">01:07:44</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>:D</q></li>
<li class="message">[<a href="#T01:07:47" id="T01:07:47"><abbr title="2015-09-19T01:07:47+00:00">01:07:47</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>i've been assumlated... it's too late for me too..</q></li>
<li class="message">[<a href="#T01:09:27" id="T01:09:27"><abbr title="2015-09-19T01:09:27+00:00">01:09:27</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>but anyhow, you have three official reserved MAC addresses per am335x</q></li>
<li class="message">[<a href="#T01:09:31" id="T01:09:31"><abbr title="2015-09-19T01:09:31+00:00">01:09:31</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>so</q></li>
<li class="message">[<a href="#T01:10:18" id="T01:10:18"><abbr title="2015-09-19T01:10:18+00:00">01:10:18</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>cool: <a href="http://fpaste.org/269119/">http://fpaste.org/269119/</a> and i still get both mac's. <a href="http://fpaste.org/269120/">http://fpaste.org/269120/</a></q></li>
<li class="quit">[<a href="#T01:10:38" id="T01:10:38"><abbr title="2015-09-19T01:10:38+00:00">01:10:38</abbr></a>] <span>* dastaan (~dastaan@150.107.254.67) Quit (Ping timeout: 260 seconds)</span></li>
<li class="message">[<a href="#T01:10:42" id="T01:10:42"><abbr title="2015-09-19T01:10:42+00:00">01:10:42</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>and no mdio missing ;) <a href="http://fpaste.org/269121/">http://fpaste.org/269121/</a></q></li>
<li class="message">[<a href="#T01:11:26" id="T01:11:26"><abbr title="2015-09-19T01:11:26+00:00">01:11:26</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>ahh, I just noticed I actually delete the second slave node in my DT</q></li>
<li class="message">[<a href="#T01:11:37" id="T01:11:37"><abbr title="2015-09-19T01:11:37+00:00">01:11:37</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>that explains its absence quite well</q></li>
<li class="message">[<a href="#T01:12:18" id="T01:12:18"><abbr title="2015-09-19T01:12:18+00:00">01:12:18</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>heheh</q></li>
<li class="message">[<a href="#T01:12:39" id="T01:12:39"><abbr title="2015-09-19T01:12:39+00:00">01:12:39</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>but setting slaves to &lt;1&gt; is enough to keep the kernel from trying to use it</q></li>
<li class="message">[<a href="#T01:12:48" id="T01:12:48"><abbr title="2015-09-19T01:12:48+00:00">01:12:48</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>I just deleted it because... well, why not</q></li>
<li class="message">[<a href="#T01:13:15" id="T01:13:15"><abbr title="2015-09-19T01:13:15+00:00">01:13:15</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>it's just a magic struct anyways... call it fuzz testing..</q></li>
<li class="message">[<a href="#T01:14:24" id="T01:14:24"><abbr title="2015-09-19T01:14:24+00:00">01:14:24</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>board files would avoid this crap</q></li>
<li class="message">[<a href="#T01:14:25" id="T01:14:25"><abbr title="2015-09-19T01:14:25+00:00">01:14:25</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>:P</q></li>
<li class="message">[<a href="#T01:14:51" id="T01:14:51"><abbr title="2015-09-19T01:14:51+00:00">01:14:51</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>we did a lot of crap in board files too. ;)</q></li>
<li class="message">[<a href="#T01:15:13" id="T01:15:13"><abbr title="2015-09-19T01:15:13+00:00">01:15:13</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>yes but that is more manageable</q></li>
<li class="message">[<a href="#T01:15:33" id="T01:15:33"><abbr title="2015-09-19T01:15:33+00:00">01:15:33</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>I'd prefer good metacompilation infrastructure... all this stuff being probed/scanned/constructed at *runtime* is just ridiculous</q></li>
<li class="message">[<a href="#T01:15:49" id="T01:15:49"><abbr title="2015-09-19T01:15:49+00:00">01:15:49</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>thinks back to the "buddy=" and "buddy2='... manageable. ;)</q></li>
<li class="message">[<a href="#T01:16:11" id="T01:16:11"><abbr title="2015-09-19T01:16:11+00:00">01:16:11</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>the whole concept of capes is broken in the first place</q></li>
<li class="message">[<a href="#T01:16:25" id="T01:16:25"><abbr title="2015-09-19T01:16:25+00:00">01:16:25</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>the whole concept of a dynamic kernel is broken. ;)</q></li>
<li class="message">[<a href="#T01:16:36" id="T01:16:36"><abbr title="2015-09-19T01:16:36+00:00">01:16:36</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>they are expansion boards and you need to mod the kernel to suit your HW</q></li>
<li class="message">[<a href="#T01:16:43" id="T01:16:43"><abbr title="2015-09-19T01:16:43+00:00">01:16:43</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>yes. kernels should be static</q></li>
<li class="message">[<a href="#T01:16:51" id="T01:16:51"><abbr title="2015-09-19T01:16:51+00:00">01:16:51</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>remember v4.1.x is the terminator... look what we did...</q></li>
<li class="message">[<a href="#T01:18:34" id="T01:18:34"><abbr title="2015-09-19T01:18:34+00:00">01:18:34</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>zmatt, is that irq fix also in mainline or should i just keep the slaves = &lt;1&gt; for the v4.1.x-ti branch?</q></li>
<li class="message">[<a href="#T01:18:56" id="T01:18:56"><abbr title="2015-09-19T01:18:56+00:00">01:18:56</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>rcn-ee: no idea what it's status is... you're the one who located it in the first place :)</q></li>
<li class="message">[<a href="#T01:19:53" id="T01:19:53"><abbr title="2015-09-19T01:19:53+00:00">01:19:53</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>ah.. so it's beer time to fix my long term memory. ;)</q></li>
<li class="message">[<a href="#T01:19:59" id="T01:19:59"><abbr title="2015-09-19T01:19:59+00:00">01:19:59</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>lol</q></li>
<li class="message">[<a href="#T01:20:15" id="T01:20:15"><abbr title="2015-09-19T01:20:15+00:00">01:20:15</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>beer... swamp water... same thing</q></li>
<li class="join">[<a href="#T01:20:53" id="T01:20:53"><abbr title="2015-09-19T01:20:53+00:00">01:20:53</abbr></a>] <span>* dastaan (~dastaan@150.107.254.67) has joined #beagle</span></li>
<li class="message">[<a href="#T01:21:25" id="T01:21:25"><abbr title="2015-09-19T01:21:25+00:00">01:21:25</abbr></a>] &lt;<cite>rcn-ee</cite>&gt; <q>it's selected swamp water... you don't want every animal's piss.. just one organism's</q></li>
<li class="message">[<a href="#T01:23:24" id="T01:23:24"><abbr title="2015-09-19T01:23:24+00:00">01:23:24</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>also, if anyone happens to have an urge to be able to throw C++ exceptions out of synchronous signal handlers (SIGSEGV, SIGBUS, etc), I got the glibc fix working that people have been asking periodically for for the past four years</q></li>
<li class="message">[<a href="#T01:24:04" id="T01:24:04"><abbr title="2015-09-19T01:24:04+00:00">01:24:04</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>(no need to patch glibc, you can just link two small files into your program)</q></li>
<li class="quit">[<a href="#T01:25:52" id="T01:25:52"><abbr title="2015-09-19T01:25:52+00:00">01:25:52</abbr></a>] <span>* dastaan (~dastaan@150.107.254.67) Quit (Ping timeout: 272 seconds)</span></li>
<li class="message">[<a href="#T01:26:04" id="T01:26:04"><abbr title="2015-09-19T01:26:04+00:00">01:26:04</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>arrrgg... people still using glibc?!</q></li>
<li class="message">[<a href="#T01:26:17" id="T01:26:17"><abbr title="2015-09-19T01:26:17+00:00">01:26:17</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>Paul Brook "explained" how to do it in 2011 ( <a href="https://gcc.gnu.org/ml/gcc/2011-10/msg00482.html">https://gcc.gnu.org/ml/gcc/2011-10/msg00482.html</a> ) but his outline is not exactly obvious to expand</q></li>
<li class="message">[<a href="#T01:26:38" id="T01:26:38"><abbr title="2015-09-19T01:26:38+00:00">01:26:38</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>ds2: actually it'll work for any libc</q></li>
<li class="message">[<a href="#T01:27:38" id="T01:27:38"><abbr title="2015-09-19T01:27:38+00:00">01:27:38</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>the fix is a customized arm eabi unwinding "personality routine" for the signal restorer</q></li>
<li class="message">[<a href="#T01:27:57" id="T01:27:57"><abbr title="2015-09-19T01:27:57+00:00">01:27:57</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>that actually unwinds the signal frame correctly</q></li>
<li class="message">[<a href="#T01:29:41" id="T01:29:41"><abbr title="2015-09-19T01:29:41+00:00">01:29:41</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>so it is arm specific</q></li>
<li class="message">[<a href="#T01:29:43" id="T01:29:43"><abbr title="2015-09-19T01:29:43+00:00">01:29:43</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>basically just emulate the kernel's sys_sigreturn but acting on the unwinder's virtual regsiter state</q></li>
<li class="message">[<a href="#T01:29:52" id="T01:29:52"><abbr title="2015-09-19T01:29:52+00:00">01:29:52</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yes, because it's broken arm-specific</q></li>
<li class="message">[<a href="#T01:30:00" id="T01:30:00"><abbr title="2015-09-19T01:30:00+00:00">01:30:00</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>it works fine on most other platforms already</q></li>
<li class="message">[<a href="#T01:30:54" id="T01:30:54"><abbr title="2015-09-19T01:30:54+00:00">01:30:54</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>in all cases you need to compile with -fnon-call-exceptions to inform gcc that exceptions can fall out of the sky almost anywhere, and then you're good to go</q></li>
<li class="message">[<a href="#T01:31:38" id="T01:31:38"><abbr title="2015-09-19T01:31:38+00:00">01:31:38</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>people use it most commonly to emulate Windows' behaviour of throwing a NullPointerException on NULL-dereference</q></li>
<li class="message">[<a href="#T01:32:08" id="T01:32:08"><abbr title="2015-09-19T01:32:08+00:00">01:32:08</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>sigh....</q></li>
<li class="quit">[<a href="#T01:32:37" id="T01:32:37"><abbr title="2015-09-19T01:32:37+00:00">01:32:37</abbr></a>] <span>* dwery (~dwery@nslu2-linux/dwery) Quit (Ping timeout: 244 seconds)</span></li>
<li class="message">[<a href="#T01:33:50" id="T01:33:50"><abbr title="2015-09-19T01:33:50+00:00">01:33:50</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>well if you have to choose between either that or actually having to try and *fix* the crawling horror of a codebase that someone dropped into your lap? ;-)</q></li>
<li class="message">[<a href="#T01:34:03" id="T01:34:03"><abbr title="2015-09-19T01:34:03+00:00">01:34:03</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>I rather fix it</q></li>
<li class="message">[<a href="#T01:34:26" id="T01:34:26"><abbr title="2015-09-19T01:34:26+00:00">01:34:26</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>i am usually the receiver of such bugs</q></li>
<li class="message">[<a href="#T01:35:14" id="T01:35:14"><abbr title="2015-09-19T01:35:14+00:00">01:35:14</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>what bugs?  it worked "fine" on windows...</q></li>
<li class="message">[<a href="#T01:35:20" id="T01:35:20"><abbr title="2015-09-19T01:35:20+00:00">01:35:20</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>;)</q></li>
<li class="join">[<a href="#T01:43:36" id="T01:43:36"><abbr title="2015-09-19T01:43:36+00:00">01:43:36</abbr></a>] <span>* Ceriand|desktop (~Ceriand@unaffiliated/ceriand) has joined #beagle</span></li>
<li class="join">[<a href="#T01:50:40" id="T01:50:40"><abbr title="2015-09-19T01:50:40+00:00">01:50:40</abbr></a>] <span>* jdawgaz (~Jerry@wsip-68-98-215-108.ph.ph.cox.net) has joined #beaglebone</span></li>
<li class="join">[<a href="#T01:50:50" id="T01:50:50"><abbr title="2015-09-19T01:50:50+00:00">01:50:50</abbr></a>] <span>* dastaan (~dastaan@150.107.254.67) has joined #beagle</span></li>
<li class="message">[<a href="#T01:55:02" id="T01:55:02"><abbr title="2015-09-19T01:55:02+00:00">01:55:02</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>tell that to the angry customer ;)</q></li>
<li class="quit">[<a href="#T01:55:10" id="T01:55:10"><abbr title="2015-09-19T01:55:10+00:00">01:55:10</abbr></a>] <span>* dastaan (~dastaan@150.107.254.67) Quit (Ping timeout: 240 seconds)</span></li>
<li class="quit">[<a href="#T01:59:26" id="T01:59:26"><abbr title="2015-09-19T01:59:26+00:00">01:59:26</abbr></a>] <span>* Humpelst1lzchen (erik@f054115143.adsl.alicedsl.de) Quit (Ping timeout: 272 seconds)</span></li>
