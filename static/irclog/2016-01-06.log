<li class="join">[<a href="#T00:00:31" id="T00:00:31"><abbr title="2016-01-06T00:00:31+00:00">00:00:31</abbr></a>] <span>* BeagleBot (~PircBot@ec2-50-17-196-130.compute-1.amazonaws.com) has joined #beagle</span></li>
<li class="topic">[<abbr title="2016-01-06T00:00:31+00:00">00:00:31</abbr>] <span>* Topic is '<a href="http://beagleboard.org/chat">http://beagleboard.org/chat</a> has a guide on how to ask questions and links to the logs | never ask to ask, just ask | be patient | pastebin a boot log | <a href="http://ahsoftware.de/Beaglebone_Black_Boot_explained.svg">http://ahsoftware.de/Beaglebone_Black_Boot_explained.svg</a> | <a href="http://beagleboard.org/latest-images">http://beagleboard.org/latest-images</a> | <a href="http://beagleboard.org/Support/bone101">http://beagleboard.org/Support/bone101</a> | direct bonescript/node.js questions to #beagle-bonescript | books: <a href="http://bit.ly/bbb-books'">http://bit.ly/bbb-books'</a></span></li>
<li class="topic">[<abbr title="2016-01-06T00:00:31+00:00">00:00:31</abbr>] <span>* Set by KotH!~attila@erica.kinali.ch on Wed Jul 15 13:55:07 UTC 2015</span></li>
<li class="join">[<abbr title="2016-01-06T00:00:31+00:00">00:00:31</abbr>] <span>* BeagleBot (~PircBot@ec2-50-17-196-130.compute-1.amazonaws.com) has joined #beagleboard</span></li>
<li class="join">[<abbr title="2016-01-06T00:00:31+00:00">00:00:31</abbr>] <span>* BeagleBot (~PircBot@ec2-50-17-196-130.compute-1.amazonaws.com) has joined #beaglebone</span></li>
<li class="join">[<a href="#T00:03:01" id="T00:03:01"><abbr title="2016-01-06T00:03:01+00:00">00:03:01</abbr></a>] <span>* dgerlach1 (dgerlach@nat/ti/x-pfhgkcbajmzensfe) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:03:30" id="T00:03:30"><abbr title="2016-01-06T00:03:30+00:00">00:03:30</abbr></a>] <span>* ohama (ohama@cicolina.org) Quit (Remote host closed the connection)</span></li>
<li class="join">[<a href="#T00:06:38" id="T00:06:38"><abbr title="2016-01-06T00:06:38+00:00">00:06:38</abbr></a>] <span>* ohama (ohama@cicolina.org) has joined #beaglebone</span></li>
<li class="quit">[<a href="#T00:07:23" id="T00:07:23"><abbr title="2016-01-06T00:07:23+00:00">00:07:23</abbr></a>] <span>* Akex_ (uid58281@gateway/web/irccloud.com/x-iidtcjrmytlmkqtq) Quit (Quit: Connection closed for inactivity)</span></li>
<li class="message">[<a href="#T00:18:29" id="T00:18:29"><abbr title="2016-01-06T00:18:29+00:00">00:18:29</abbr></a>] &lt;<cite>vagrantc</cite>&gt; <q>hm.</q></li>
<li class="message">[<a href="#T00:18:30" id="T00:18:30"><abbr title="2016-01-06T00:18:30+00:00">00:18:30</abbr></a>] &lt;<cite>vagrantc</cite>&gt; <q>[    3.706326] WARNING: CPU: 0 PID: 209 at ../../../drivers/bus/omap_l3_noc.c:147 l3_interrupt_handler+0x27c/0x39c()</q></li>
<li class="message">[<a href="#T00:18:33" id="T00:18:33"><abbr title="2016-01-06T00:18:33+00:00">00:18:33</abbr></a>] &lt;<cite>vagrantc</cite>&gt; <q>[    3.706332] 44000000.ocp:L3 Standard Error: MASTER MPU TARGET DSS (Read Link): At Address: 0x00040028 : Data Access in User mode during Functional access</q></li>
<li class="message">[<a href="#T00:18:38" id="T00:18:38"><abbr title="2016-01-06T00:18:38+00:00">00:18:38</abbr></a>] &lt;<cite>vagrantc</cite>&gt; <q>what's the omap_l3_noc ?</q></li>
<li class="join">[<a href="#T00:19:47" id="T00:19:47"><abbr title="2016-01-06T00:19:47+00:00">00:19:47</abbr></a>] <span>* frv- (~frv@coudon.miradou.com) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:27:15" id="T00:27:15"><abbr title="2016-01-06T00:27:15+00:00">00:27:15</abbr></a>] <span>* vagrantc (~vagrant@unaffiliated/vagrantc) Quit (Quit: leaving)</span></li>
<li class="join">[<a href="#T00:28:47" id="T00:28:47"><abbr title="2016-01-06T00:28:47+00:00">00:28:47</abbr></a>] <span>* sandaldude (521a8cfd@gateway/web/freenode/ip.82.26.140.253) has joined #beagle</span></li>
<li class="message">[<a href="#T00:29:04" id="T00:29:04"><abbr title="2016-01-06T00:29:04+00:00">00:29:04</abbr></a>] &lt;<cite>sandaldude</cite>&gt; <q>Hi folks</q></li>
<li class="message">[<a href="#T00:29:46" id="T00:29:46"><abbr title="2016-01-06T00:29:46+00:00">00:29:46</abbr></a>] &lt;<cite>sandaldude</cite>&gt; <q>This is actually not strictly a BBB question, but since you're prolly all SBC aficianados...</q></li>
<li class="message">[<a href="#T00:30:14" id="T00:30:14"><abbr title="2016-01-06T00:30:14+00:00">00:30:14</abbr></a>] &lt;<cite>sandaldude</cite>&gt; <q>Anyone know where on earth I can get hold of a Roseapple Pi to ship to US/Europe?</q></li>
<li class="message">[<a href="#T00:31:05" id="T00:31:05"><abbr title="2016-01-06T00:31:05+00:00">00:31:05</abbr></a>] &lt;<cite>sandaldude</cite>&gt; <q>All the asian sites are either in Chinese/Singaporean etc and none seem to ship, but guys on YT have somehow gotten hold of them...I'm well stumped</q></li>
<li class="message">[<a href="#T00:32:09" id="T00:32:09"><abbr title="2016-01-06T00:32:09+00:00">00:32:09</abbr></a>] &lt;<cite>sandaldude</cite>&gt; <q>?</q></li>
<li class="message">[<a href="#T00:34:01" id="T00:34:01"><abbr title="2016-01-06T00:34:01+00:00">00:34:01</abbr></a>] &lt;<cite>sandaldude</cite>&gt; <q>Wrong type of question? What do peeps normally ask in here? Resistance differentials across GPIO pins and stuff?</q></li>
<li class="message">[<a href="#T00:34:44" id="T00:34:44"><abbr title="2016-01-06T00:34:44+00:00">00:34:44</abbr></a>] &lt;<cite>sandaldude</cite>&gt; <q>Anyone connected up any old chips to the BBB? I got a couple of capes to rig up some 68K stuff, but that looks a pretty hefty undertaking...</q></li>
<li class="quit">[<a href="#T00:36:02" id="T00:36:02"><abbr title="2016-01-06T00:36:02+00:00">00:36:02</abbr></a>] <span>* tomeff (~tomeff@ip-94-112-0-81.net.upcbroadband.cz) Quit (Quit: tomeff)</span></li>
<li class="message">[<a href="#T00:36:34" id="T00:36:34"><abbr title="2016-01-06T00:36:34+00:00">00:36:34</abbr></a>] &lt;<cite>sandaldude</cite>&gt; <q>Well anyways nice talking to you... 8[</q></li>
<li class="quit">[<a href="#T00:36:40" id="T00:36:40"><abbr title="2016-01-06T00:36:40+00:00">00:36:40</abbr></a>] <span>* sandaldude (521a8cfd@gateway/web/freenode/ip.82.26.140.253) Quit (Quit: Page closed)</span></li>
<li class="quit">[<a href="#T00:37:04" id="T00:37:04"><abbr title="2016-01-06T00:37:04+00:00">00:37:04</abbr></a>] <span>* iandow (~iandow@71-36-104-124.ptld.qwest.net) Quit (Remote host closed the connection)</span></li>
<li class="join">[<a href="#T00:42:26" id="T00:42:26"><abbr title="2016-01-06T00:42:26+00:00">00:42:26</abbr></a>] <span>* iandow (~iandow@71-36-104-124.ptld.qwest.net) has joined #beaglebone</span></li>
<li class="join">[<a href="#T00:56:00" id="T00:56:00"><abbr title="2016-01-06T00:56:00+00:00">00:56:00</abbr></a>] <span>* nasuga (~nasuga@unaffiliated/nasuga) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:58:31" id="T00:58:31"><abbr title="2016-01-06T00:58:31+00:00">00:58:31</abbr></a>] <span>* NishanthMenon (~nmenon@unaffiliated/nishanthmenon) Quit (Remote host closed the connection)</span></li>
<li class="quit">[<a href="#T01:03:55" id="T01:03:55"><abbr title="2016-01-06T01:03:55+00:00">01:03:55</abbr></a>] <span>* manuel_ (~manuel@p549C4A48.dip0.t-ipconnect.de) Quit (Quit: manuel_)</span></li>
<li class="quit">[<a href="#T01:09:54" id="T01:09:54"><abbr title="2016-01-06T01:09:54+00:00">01:09:54</abbr></a>] <span>* iandow (~iandow@71-36-104-124.ptld.qwest.net) Quit (Remote host closed the connection)</span></li>
<li class="quit">[<a href="#T01:19:12" id="T01:19:12"><abbr title="2016-01-06T01:19:12+00:00">01:19:12</abbr></a>] <span>* ketas (~ketas@229-211-191-90.dyn.estpak.ee) Quit (Ping timeout: 250 seconds)</span></li>
<li class="quit">[<a href="#T01:21:32" id="T01:21:32"><abbr title="2016-01-06T01:21:32+00:00">01:21:32</abbr></a>] <span>* florian (~fuchs@Maemo/community/contributor/florian) Quit (Ping timeout: 276 seconds)</span></li>
<li class="quit">[<a href="#T01:29:35" id="T01:29:35"><abbr title="2016-01-06T01:29:35+00:00">01:29:35</abbr></a>] <span>* msvb-lab (~mschloh@x55b54627.dyn.telefonica.de) Quit (Ping timeout: 264 seconds)</span></li>
<li class="join">[<a href="#T01:32:18" id="T01:32:18"><abbr title="2016-01-06T01:32:18+00:00">01:32:18</abbr></a>] <span>* idwer_ (~irc@unaffiliated/idwer) has joined #beagle</span></li>
<li class="quit">[<a href="#T01:35:34" id="T01:35:34"><abbr title="2016-01-06T01:35:34+00:00">01:35:34</abbr></a>] <span>* idwer (~irc@unaffiliated/idwer) Quit (Ping timeout: 245 seconds)</span></li>
<li class="join">[<a href="#T01:50:29" id="T01:50:29"><abbr title="2016-01-06T01:50:29+00:00">01:50:29</abbr></a>] <span>* zauslande (~zauslande@66.53.80.72) has joined #beagle</span></li>
<li class="quit">[<a href="#T02:03:47" id="T02:03:47"><abbr title="2016-01-06T02:03:47+00:00">02:03:47</abbr></a>] <span>* cc0_1 (~cc0_@c-174-53-187-122.hsd1.mn.comcast.net) Quit (Ping timeout: 264 seconds)</span></li>
<li class="join">[<a href="#T02:04:11" id="T02:04:11"><abbr title="2016-01-06T02:04:11+00:00">02:04:11</abbr></a>] <span>* cc0_ (~cc0_@c-174-53-187-122.hsd1.mn.comcast.net) has joined #beagle</span></li>
<li class="quit">[<a href="#T02:15:48" id="T02:15:48"><abbr title="2016-01-06T02:15:48+00:00">02:15:48</abbr></a>] <span>* xavier_ (67e0a755@gateway/web/freenode/ip.103.224.167.85) Quit (Ping timeout: 252 seconds)</span></li>
<li class="quit">[<a href="#T02:16:54" id="T02:16:54"><abbr title="2016-01-06T02:16:54+00:00">02:16:54</abbr></a>] <span>* xavier__ (67e0a755@gateway/web/freenode/ip.103.224.167.85) Quit (Ping timeout: 252 seconds)</span></li>
<li class="quit">[<a href="#T02:20:02" id="T02:20:02"><abbr title="2016-01-06T02:20:02+00:00">02:20:02</abbr></a>] <span>* Cats_home (~Thunderbi@dsl.198.58.157.199.ebox.ca) Quit (Quit: Cats_home)</span></li>
<li class="join">[<a href="#T02:20:48" id="T02:20:48"><abbr title="2016-01-06T02:20:48+00:00">02:20:48</abbr></a>] <span>* Cats_home (~Thunderbi@dsl.198.58.157.199.ebox.ca) has joined #beagle</span></li>
<li class="quit">[<a href="#T02:22:18" id="T02:22:18"><abbr title="2016-01-06T02:22:18+00:00">02:22:18</abbr></a>] <span>* dys (~dys@ip-109-41-129-25.web.vodafone.de) Quit (Ping timeout: 265 seconds)</span></li>
<li class="quit">[<a href="#T02:26:46" id="T02:26:46"><abbr title="2016-01-06T02:26:46+00:00">02:26:46</abbr></a>] <span>* dgerlach1 (dgerlach@nat/ti/x-pfhgkcbajmzensfe) Quit (Ping timeout: 260 seconds)</span></li>
<li class="message">[<a href="#T02:27:48" id="T02:27:48"><abbr title="2016-01-06T02:27:48+00:00">02:27:48</abbr></a>] &lt;<cite>GenTooMan</cite>&gt; <q>8 minutes of waiting...</q></li>
<li class="join">[<a href="#T02:36:08" id="T02:36:08"><abbr title="2016-01-06T02:36:08+00:00">02:36:08</abbr></a>] <span>* Humpelstilzchen (erik@x55b02c06.dyn.telefonica.de) has joined #beagle</span></li>
<li class="quit">[<a href="#T02:37:41" id="T02:37:41"><abbr title="2016-01-06T02:37:41+00:00">02:37:41</abbr></a>] <span>* idwer_ (~irc@unaffiliated/idwer) Quit (Remote host closed the connection)</span></li>
<li class="quit">[<a href="#T02:37:59" id="T02:37:59"><abbr title="2016-01-06T02:37:59+00:00">02:37:59</abbr></a>] <span>* Defiant (erik@f054027093.adsl.alicedsl.de) Quit (Ping timeout: 264 seconds)</span></li>
<li class="join">[<a href="#T02:43:27" id="T02:43:27"><abbr title="2016-01-06T02:43:27+00:00">02:43:27</abbr></a>] <span>* dys (~dys@ip-109-44-156-10.web.vodafone.de) has joined #beagle</span></li>
<li class="quit">[<a href="#T02:43:43" id="T02:43:43"><abbr title="2016-01-06T02:43:43+00:00">02:43:43</abbr></a>] <span>* emeb (~ericb@ip68-2-68-52.ph.ph.cox.net) Quit (Quit: Leaving.)</span></li>
<li class="join">[<a href="#T02:47:09" id="T02:47:09"><abbr title="2016-01-06T02:47:09+00:00">02:47:09</abbr></a>] <span>* iandow (~iandow@71-36-104-124.ptld.qwest.net) has joined #beaglebone</span></li>
<li class="quit">[<a href="#T03:01:39" id="T03:01:39"><abbr title="2016-01-06T03:01:39+00:00">03:01:39</abbr></a>] <span>* iandow (~iandow@71-36-104-124.ptld.qwest.net) Quit (Remote host closed the connection)</span></li>
<li class="join">[<a href="#T03:07:56" id="T03:07:56"><abbr title="2016-01-06T03:07:56+00:00">03:07:56</abbr></a>] <span>* iandow (~iandow@71-36-104-124.ptld.qwest.net) has joined #beaglebone</span></li>
<li class="quit">[<a href="#T03:10:06" id="T03:10:06"><abbr title="2016-01-06T03:10:06+00:00">03:10:06</abbr></a>] <span>* iandow (~iandow@71-36-104-124.ptld.qwest.net) Quit (Remote host closed the connection)</span></li>
<li class="join">[<a href="#T03:12:28" id="T03:12:28"><abbr title="2016-01-06T03:12:28+00:00">03:12:28</abbr></a>] <span>* iandow (~iandow@71-36-104-124.ptld.qwest.net) has joined #beaglebone</span></li>
<li class="message">[<a href="#T03:13:15" id="T03:13:15"><abbr title="2016-01-06T03:13:15+00:00">03:13:15</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>uhuh</q></li>
<li class="quit">[<a href="#T03:13:29" id="T03:13:29"><abbr title="2016-01-06T03:13:29+00:00">03:13:29</abbr></a>] <span>* iandow (~iandow@71-36-104-124.ptld.qwest.net) Quit (Remote host closed the connection)</span></li>
<li class="join">[<a href="#T03:15:37" id="T03:15:37"><abbr title="2016-01-06T03:15:37+00:00">03:15:37</abbr></a>] <span>* Ceriand|desktop (~Ceriand@unaffiliated/ceriand) has joined #beagle</span></li>
<li class="message">[<a href="#T03:24:20" id="T03:24:20"><abbr title="2016-01-06T03:24:20+00:00">03:24:20</abbr></a>] &lt;<cite>veremit</cite>&gt; <q>only 8 minutes, eh?</q></li>
<li class="quit">[<a href="#T03:38:04" id="T03:38:04"><abbr title="2016-01-06T03:38:04+00:00">03:38:04</abbr></a>] <span>* mrjazzcat (~mrjazzcat@c-50-134-253-3.hsd1.co.comcast.net) Quit (Ping timeout: 245 seconds)</span></li>
<li class="quit">[<a href="#T03:42:34" id="T03:42:34"><abbr title="2016-01-06T03:42:34+00:00">03:42:34</abbr></a>] <span>* weox (uid112413@gateway/web/irccloud.com/x-sooecyhtzwngsabc) Quit (Quit: Connection closed for inactivity)</span></li>
<li class="join">[<a href="#T03:51:23" id="T03:51:23"><abbr title="2016-01-06T03:51:23+00:00">03:51:23</abbr></a>] <span>* iandow (~iandow@71-36-104-124.ptld.qwest.net) has joined #beaglebone</span></li>
<li class="join">[<a href="#T03:53:06" id="T03:53:06"><abbr title="2016-01-06T03:53:06+00:00">03:53:06</abbr></a>] <span>* tai271828 (~tai271828@175.41.48.77) has joined #beagle</span></li>
<li class="quit">[<a href="#T04:23:36" id="T04:23:36"><abbr title="2016-01-06T04:23:36+00:00">04:23:36</abbr></a>] <span>* penth (~rachel@c-68-81-92-61.hsd1.pa.comcast.net) Quit (Remote host closed the connection)</span></li>
<li class="join">[<a href="#T04:26:57" id="T04:26:57"><abbr title="2016-01-06T04:26:57+00:00">04:26:57</abbr></a>] <span>* yates (~user@nc-71-51-249-15.dhcp.embarqhsd.net) has joined #beagle</span></li>
<li class="message">[<a href="#T04:28:06" id="T04:28:06"><abbr title="2016-01-06T04:28:06+00:00">04:28:06</abbr></a>] &lt;<cite>yates</cite>&gt; <q>where is register that determines the location of interrupt vector table? i've looked in several manuals and don't see it.</q></li>
<li class="message">[<a href="#T04:28:13" id="T04:28:13"><abbr title="2016-01-06T04:28:13+00:00">04:28:13</abbr></a>] &lt;<cite>yates</cite>&gt; <q>for the am335x, that is.</q></li>
<li class="quit">[<a href="#T04:29:46" id="T04:29:46"><abbr title="2016-01-06T04:29:46+00:00">04:29:46</abbr></a>] <span>* calculus (~calculus@gentoo/user/calculus) Quit (Ping timeout: 240 seconds)</span></li>
<li class="quit">[<a href="#T04:30:33" id="T04:30:33"><abbr title="2016-01-06T04:30:33+00:00">04:30:33</abbr></a>] <span>* withattribution (726cdebe@gateway/web/freenode/ip.114.108.222.190) Quit (Ping timeout: 252 seconds)</span></li>
<li class="message">[<a href="#T04:31:11" id="T04:31:11"><abbr title="2016-01-06T04:31:11+00:00">04:31:11</abbr></a>] &lt;<cite>yates</cite>&gt; <q>zmatt: ?</q></li>
<li class="message">[<a href="#T04:32:21" id="T04:32:21"><abbr title="2016-01-06T04:32:21+00:00">04:32:21</abbr></a>] &lt;<cite>yates</cite>&gt; <q>also where is the definition of the interrupt vector table?</q></li>
<li class="message">[<a href="#T04:33:41" id="T04:33:41"><abbr title="2016-01-06T04:33:41+00:00">04:33:41</abbr></a>] &lt;<cite>yates</cite>&gt; <q>your vectors.S has init, exc_undef, exc_syscall, etc., located at "vectors" (every four words), but this doesn't match the interrupts defined in Table 6-1 of the am335x trm.</q></li>
<li class="join">[<a href="#T04:41:14" id="T04:41:14"><abbr title="2016-01-06T04:41:14+00:00">04:41:14</abbr></a>] <span>* abhi_ (0117d3d2@gateway/web/freenode/ip.1.23.211.210) has joined #beagle</span></li>
<li class="message">[<a href="#T04:42:09" id="T04:42:09"><abbr title="2016-01-06T04:42:09+00:00">04:42:09</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>hello all.. How to add QT to statrtup .  I am using debian on bbb. It would be great is someone could help.</q></li>
<li class="message">[<a href="#T04:43:21" id="T04:43:21"><abbr title="2016-01-06T04:43:21+00:00">04:43:21</abbr></a>] &lt;<cite>yates</cite>&gt; <q>abhi_: what do you mean by "add QT to startup"?</q></li>
<li class="message">[<a href="#T04:43:32" id="T04:43:32"><abbr title="2016-01-06T04:43:32+00:00">04:43:32</abbr></a>] &lt;<cite>yates</cite>&gt; <q>what do you really want to do?</q></li>
<li class="message">[<a href="#T04:44:26" id="T04:44:26"><abbr title="2016-01-06T04:44:26+00:00">04:44:26</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>hi yates. i have a qt gui application. I want that at startup . I have disabled the desktop.</q></li>
<li class="message">[<a href="#T04:45:16" id="T04:45:16"><abbr title="2016-01-06T04:45:16+00:00">04:45:16</abbr></a>] &lt;<cite>yates</cite>&gt; <q>do you know about systemd?</q></li>
<li class="message">[<a href="#T04:45:31" id="T04:45:31"><abbr title="2016-01-06T04:45:31+00:00">04:45:31</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>no i dont</q></li>
<li class="message">[<a href="#T04:45:46" id="T04:45:46"><abbr title="2016-01-06T04:45:46+00:00">04:45:46</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>i tries adding to /etc/init.d</q></li>
<li class="message">[<a href="#T04:46:03" id="T04:46:03"><abbr title="2016-01-06T04:46:03+00:00">04:46:03</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>but its not getting started</q></li>
<li class="message">[<a href="#T04:46:04" id="T04:46:04"><abbr title="2016-01-06T04:46:04+00:00">04:46:04</abbr></a>] &lt;<cite>yates</cite>&gt; <q>it basically is what manages what things get started</q></li>
<li class="message">[<a href="#T04:46:13" id="T04:46:13"><abbr title="2016-01-06T04:46:13+00:00">04:46:13</abbr></a>] &lt;<cite>yates</cite>&gt; <q>yeah, that's not a good approach</q></li>
<li class="message">[<a href="#T04:46:18" id="T04:46:18"><abbr title="2016-01-06T04:46:18+00:00">04:46:18</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>oh is it</q></li>
<li class="message">[<a href="#T04:46:29" id="T04:46:29"><abbr title="2016-01-06T04:46:29+00:00">04:46:29</abbr></a>] &lt;<cite>yates</cite>&gt; <q>hang on - i'll give you an example</q></li>
<li class="message">[<a href="#T04:46:30" id="T04:46:30"><abbr title="2016-01-06T04:46:30+00:00">04:46:30</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>check the ARM TRM not the AM335 TRM</q></li>
<li class="message">[<a href="#T04:46:40" id="T04:46:40"><abbr title="2016-01-06T04:46:40+00:00">04:46:40</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>ya</q></li>
<li class="message">[<a href="#T04:46:42" id="T04:46:42"><abbr title="2016-01-06T04:46:42+00:00">04:46:42</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>interrupt table should be a Cortex thing</q></li>
<li class="message">[<a href="#T04:46:54" id="T04:46:54"><abbr title="2016-01-06T04:46:54+00:00">04:46:54</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>cuz you have been shafted by systemd</q></li>
<li class="message">[<a href="#T04:47:03" id="T04:47:03"><abbr title="2016-01-06T04:47:03+00:00">04:47:03</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>you need to do the systemd config file crap</q></li>
<li class="message">[<a href="#T04:49:43" id="T04:49:43"><abbr title="2016-01-06T04:49:43+00:00">04:49:43</abbr></a>] &lt;<cite>yates</cite>&gt; <q>abhi_: you need to create a .service file for the application, like this: <a href="http://ur1.ca/odw90">http://ur1.ca/odw90</a> -&gt; <a href="http://paste.fedoraproject.org/307664/52055741">http://paste.fedoraproject.org/307664/52055741</a></q></li>
<li class="join">[<a href="#T04:50:15" id="T04:50:15"><abbr title="2016-01-06T04:50:15+00:00">04:50:15</abbr></a>] <span>* withattribution (~textual@114.108.222.190) has joined #beagle</span></li>
<li class="message">[<a href="#T04:50:17" id="T04:50:17"><abbr title="2016-01-06T04:50:17+00:00">04:50:17</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>i will check</q></li>
<li class="message">[<a href="#T04:50:20" id="T04:50:20"><abbr title="2016-01-06T04:50:20+00:00">04:50:20</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>thanks yates</q></li>
<li class="message">[<a href="#T04:50:23" id="T04:50:23"><abbr title="2016-01-06T04:50:23+00:00">04:50:23</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>:)</q></li>
<li class="message">[<a href="#T04:50:41" id="T04:50:41"><abbr title="2016-01-06T04:50:41+00:00">04:50:41</abbr></a>] &lt;<cite>yates</cite>&gt; <q>check the manpages for systemd to find out where to put it.</q></li>
<li class="message">[<a href="#T04:51:22" id="T04:51:22"><abbr title="2016-01-06T04:51:22+00:00">04:51:22</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>ya sure i will check</q></li>
<li class="message">[<a href="#T04:51:23" id="T04:51:23"><abbr title="2016-01-06T04:51:23+00:00">04:51:23</abbr></a>] &lt;<cite>yates</cite>&gt; <q>when you get it created and in the right place, then you enable it to run at startup by issuing the command "systemctl enable xyz.service" (where xyz is the name of your service file)</q></li>
<li class="message">[<a href="#T04:51:45" id="T04:51:45"><abbr title="2016-01-06T04:51:45+00:00">04:51:45</abbr></a>] &lt;<cite>yates</cite>&gt; <q>ds2: ok, i'll check there - thanks</q></li>
<li class="message">[<a href="#T04:55:08" id="T04:55:08"><abbr title="2016-01-06T04:55:08+00:00">04:55:08</abbr></a>] &lt;<cite>yates</cite>&gt; <q>well, it's not there either. a search for "dabort" fails</q></li>
<li class="message">[<a href="#T04:55:12" id="T04:55:12"><abbr title="2016-01-06T04:55:12+00:00">04:55:12</abbr></a>] &lt;<cite>yates</cite>&gt; <q>exc_dabort</q></li>
<li class="message">[<a href="#T04:55:45" id="T04:55:45"><abbr title="2016-01-06T04:55:45+00:00">04:55:45</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yates: btw, I replied to some of your questions earlier, you can find it in the irclog</q></li>
<li class="message">[<a href="#T04:56:14" id="T04:56:14"><abbr title="2016-01-06T04:56:14+00:00">04:56:14</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>I wonder if there's a less obnoxious interface to those than <a href="http://www.beagleboard.org/irclogs/">http://www.beagleboard.org/irclogs/</a> ...</q></li>
<li class="part">[<a href="#T04:56:25" id="T04:56:25"><abbr title="2016-01-06T04:56:25+00:00">04:56:25</abbr></a>] <span>* zauslande (~zauslande@66.53.80.72) has left #beagle</span></li>
<li class="message">[<a href="#T04:56:42" id="T04:56:42"><abbr title="2016-01-06T04:56:42+00:00">04:56:42</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>and on a cortex-a8 you can put the vector table at any 32-byte aligned address</q></li>
<li class="message">[<a href="#T04:57:07" id="T04:57:07"><abbr title="2016-01-06T04:57:07+00:00">04:57:07</abbr></a>] &lt;<cite>yates</cite>&gt; <q>yeah, do you remember what day you responded?</q></li>
<li class="message">[<a href="#T04:58:14" id="T04:58:14"><abbr title="2016-01-06T04:58:14+00:00">04:58:14</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>2016-01-05 around 12:12 (in whatever timezone the irclogs are in)</q></li>
<li class="message">[<a href="#T04:58:44" id="T04:58:44"><abbr title="2016-01-06T04:58:44+00:00">04:58:44</abbr></a>] &lt;<cite>veremit</cite>&gt; <q>ir-clogs :)</q></li>
<li class="message">[<a href="#T04:59:39" id="T04:59:39"><abbr title="2016-01-06T04:59:39+00:00">04:59:39</abbr></a>] &lt;<cite>yates</cite>&gt; <q>ok, got it - reading.</q></li>
<li class="message">[<a href="#T04:59:43" id="T04:59:43"><abbr title="2016-01-06T04:59:43+00:00">04:59:43</abbr></a>] &lt;<cite>yates</cite>&gt; <q>thanks for all that.</q></li>
<li class="message">[<a href="#T05:00:16" id="T05:00:16"><abbr title="2016-01-06T05:00:16+00:00">05:00:16</abbr></a>] &lt;<cite>yates</cite>&gt; <q>zmatt: re: vector table: yeah sure, but WHAT REGISTER controls that? or did you answer in the log?</q></li>
<li class="message">[<a href="#T05:00:45" id="T05:00:45"><abbr title="2016-01-06T05:00:45+00:00">05:00:45</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i've looked through the INTC registers and don't see it</q></li>
<li class="message">[<a href="#T05:00:52" id="T05:00:52"><abbr title="2016-01-06T05:00:52+00:00">05:00:52</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i may be blind.</q></li>
<li class="message">[<a href="#T05:00:53" id="T05:00:53"><abbr title="2016-01-06T05:00:53+00:00">05:00:53</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>no since you didn't ask that back then, since it's some cp15 register</q></li>
<li class="message">[<a href="#T05:01:11" id="T05:01:11"><abbr title="2016-01-06T05:01:11+00:00">05:01:11</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>easy to find since I set it in my tiny tiny initialization routine in my bbb example</q></li>
<li class="message">[<a href="#T05:01:36" id="T05:01:36"><abbr title="2016-01-06T05:01:36+00:00">05:01:36</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>you need a mrc/mcr instruction to screw with them</q></li>
<li class="message">[<a href="#T05:01:57" id="T05:01:57"><abbr title="2016-01-06T05:01:57+00:00">05:01:57</abbr></a>] &lt;<cite>yates</cite>&gt; <q>ok, lemme check that.</q></li>
<li class="message">[<a href="#T05:02:01" id="T05:02:01"><abbr title="2016-01-06T05:02:01+00:00">05:02:01</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q><a href="https://github.com/mvduin/bbb-asm-demo/blob/master/init.S#L28">https://github.com/mvduin/bbb-asm-demo/blob/master/init.S#L28</a></q></li>
<li class="message">[<a href="#T05:02:40" id="T05:02:40"><abbr title="2016-01-06T05:02:40+00:00">05:02:40</abbr></a>] &lt;<cite>yates</cite>&gt; <q>by the way, i found the u-boot code that initializes ddr3. got it ported. testing it now.</q></li>
<li class="message">[<a href="#T05:02:57" id="T05:02:57"><abbr title="2016-01-06T05:02:57+00:00">05:02:57</abbr></a>] &lt;<cite>yates</cite>&gt; <q>my one day is gone...</q></li>
<li class="quit">[<a href="#T05:03:04" id="T05:03:04"><abbr title="2016-01-06T05:03:04+00:00">05:03:04</abbr></a>] <span>* thaolx4 (~newhanoia@123.24.130.92) Quit (Ping timeout: 245 seconds)</span></li>
<li class="message">[<a href="#T05:03:08" id="T05:03:08"><abbr title="2016-01-06T05:03:08+00:00">05:03:08</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>the ddr3 init in u-boot should be obvious :D</q></li>
<li class="message">[<a href="#T05:04:16" id="T05:04:16"><abbr title="2016-01-06T05:04:16+00:00">05:04:16</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>lol</q></li>
<li class="message">[<a href="#T05:04:35" id="T05:04:35"><abbr title="2016-01-06T05:04:35+00:00">05:04:35</abbr></a>] &lt;<cite>yates</cite>&gt; <q>it is fairly obvious, ONCE YOU FIND THE RIGHT U-BOOT.</q></li>
<li class="message">[<a href="#T05:04:44" id="T05:04:44"><abbr title="2016-01-06T05:04:44+00:00">05:04:44</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>hmm?</q></li>
<li class="message">[<a href="#T05:04:56" id="T05:04:56"><abbr title="2016-01-06T05:04:56+00:00">05:04:56</abbr></a>] &lt;<cite>yates</cite>&gt; <q>it is fairly obvious, ONCE YOU FIND THE RIGHT U-BOOT.</q></li>
<li class="message">[<a href="#T05:05:00" id="T05:05:00"><abbr title="2016-01-06T05:05:00+00:00">05:05:00</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>you mean you still have u-boot 1's lying around?</q></li>
<li class="quit">[<a href="#T05:05:11" id="T05:05:11"><abbr title="2016-01-06T05:05:11+00:00">05:05:11</abbr></a>] <span>* ayjay (~ajp@216.106.134.175) Quit (Ping timeout: 265 seconds)</span></li>
<li class="message">[<a href="#T05:05:27" id="T05:05:27"><abbr title="2016-01-06T05:05:27+00:00">05:05:27</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i mean without some guidance, there are a bazillion versions of u-boot out there.</q></li>
<li class="message">[<a href="#T05:05:44" id="T05:05:44"><abbr title="2016-01-06T05:05:44+00:00">05:05:44</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>I don't think it's particularly obvious in any u-boot... the init code is scattered across many sources and headers</q></li>
<li class="message">[<a href="#T05:05:51" id="T05:05:51"><abbr title="2016-01-06T05:05:51+00:00">05:05:51</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>they are all very similar, esp. wrt to the foundation init stuff</q></li>
<li class="message">[<a href="#T05:06:06" id="T05:06:06"><abbr title="2016-01-06T05:06:06+00:00">05:06:06</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>it was to me</q></li>
<li class="message">[<a href="#T05:06:21" id="T05:06:21"><abbr title="2016-01-06T05:06:21+00:00">05:06:21</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>forgot if it was a quick grep or git log</q></li>
<li class="message">[<a href="#T05:07:06" id="T05:07:06"><abbr title="2016-01-06T05:07:06+00:00">05:07:06</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i did a bit of grepping, but it wasn't a big problem. it is a little tedious, though</q></li>
<li class="quit">[<a href="#T05:08:10" id="T05:08:10"><abbr title="2016-01-06T05:08:10+00:00">05:08:10</abbr></a>] <span>* withattribution (~textual@114.108.222.190) Quit (Quit: My Mac has gone to sleep. ZZZzzz…)</span></li>
<li class="message">[<a href="#T05:10:07" id="T05:10:07"><abbr title="2016-01-06T05:10:07+00:00">05:10:07</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>iirc the values programmed by u-boot contained some oddities though</q></li>
<li class="message">[<a href="#T05:10:20" id="T05:10:20"><abbr title="2016-01-06T05:10:20+00:00">05:10:20</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>I'm not really convinced they are optimal</q></li>
<li class="message">[<a href="#T05:11:16" id="T05:11:16"><abbr title="2016-01-06T05:11:16+00:00">05:11:16</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>(I forgot the details, though I'm sure I'll run into them again once I find time to finish my own emif init code)</q></li>
<li class="message">[<a href="#T05:15:13" id="T05:15:13"><abbr title="2016-01-06T05:15:13+00:00">05:15:13</abbr></a>] &lt;<cite>yates</cite>&gt; <q>one thing that is a big question mark is this. i'm not sure if the first subroutine in the top-level routine config_ddr, ddr_pll_config is necessary, due to the statements in section 26.1.4.3 of the am335x trm that ddr dpll is locked to 400 Mhz (as well as other plls necessary)</q></li>
<li class="message">[<a href="#T05:15:44" id="T05:15:44"><abbr title="2016-01-06T05:15:44+00:00">05:15:44</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>easy enough to check whether the ddr pll is indeed locked by ROM</q></li>
<li class="message">[<a href="#T05:15:46" id="T05:15:46"><abbr title="2016-01-06T05:15:46+00:00">05:15:46</abbr></a>] &lt;<cite>yates</cite>&gt; <q>it's not a trivial routine, so i'm hoping it isn't required.</q></li>
<li class="message">[<a href="#T05:16:01" id="T05:16:01"><abbr title="2016-01-06T05:16:01+00:00">05:16:01</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>hmm, it should be a trivial routine I think</q></li>
<li class="message">[<a href="#T05:16:12" id="T05:16:12"><abbr title="2016-01-06T05:16:12+00:00">05:16:12</abbr></a>] &lt;<cite>yates</cite>&gt; <q>no, it isn't.</q></li>
<li class="message">[<a href="#T05:16:41" id="T05:16:41"><abbr title="2016-01-06T05:16:41+00:00">05:16:41</abbr></a>] &lt;<cite>yates</cite>&gt; <q>iirc, it initializes everything, and there are deep dependencies into the other parts of the board initialization</q></li>
<li class="join">[<a href="#T05:16:58" id="T05:16:58"><abbr title="2016-01-06T05:16:58+00:00">05:16:58</abbr></a>] <span>* mrjazzcat (~mrjazzcat@c-50-134-253-3.hsd1.co.comcast.net) has joined #beagle</span></li>
<li class="message">[<a href="#T05:17:03" id="T05:17:03"><abbr title="2016-01-06T05:17:03+00:00">05:17:03</abbr></a>] &lt;<cite>yates</cite>&gt; <q>everything meaning the various processor clocks and what not. from basic parameters.</q></li>
<li class="message">[<a href="#T05:17:22" id="T05:17:22"><abbr title="2016-01-06T05:17:22+00:00">05:17:22</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>how pointless when public ROM already sets up fairly sane defaults</q></li>
<li class="message">[<a href="#T05:17:32" id="T05:17:32"><abbr title="2016-01-06T05:17:32+00:00">05:17:32</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>and linux will overwrite them yet again</q></li>
<li class="quit">[<a href="#T05:17:49" id="T05:17:49"><abbr title="2016-01-06T05:17:49+00:00">05:17:49</abbr></a>] <span>* mrjazzcat (~mrjazzcat@c-50-134-253-3.hsd1.co.comcast.net) Quit (Remote host closed the connection)</span></li>
<li class="message">[<a href="#T05:18:23" id="T05:18:23"><abbr title="2016-01-06T05:18:23+00:00">05:18:23</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i have to do some more digging. and reading. and scratching my head.</q></li>
<li class="quit">[<a href="#T05:18:47" id="T05:18:47"><abbr title="2016-01-06T05:18:47+00:00">05:18:47</abbr></a>] <span>* nasuga (~nasuga@unaffiliated/nasuga) Quit (Ping timeout: 276 seconds)</span></li>
<li class="message">[<a href="#T05:19:12" id="T05:19:12"><abbr title="2016-01-06T05:19:12+00:00">05:19:12</abbr></a>] &lt;<cite>yates</cite>&gt; <q>btw, why did you even bother with thumb2 mode? i mean, we've got, what, about 200 words of assembly?</q></li>
<li class="message">[<a href="#T05:19:47" id="T05:19:47"><abbr title="2016-01-06T05:19:47+00:00">05:19:47</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i.e., code density is not an issue here. right?</q></li>
<li class="message">[<a href="#T05:19:56" id="T05:19:56"><abbr title="2016-01-06T05:19:56+00:00">05:19:56</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>why wouldn't I?  I mean, with unified assembler syntax there's no difference in source code, and the result is more compact</q></li>
<li class="message">[<a href="#T05:20:04" id="T05:20:04"><abbr title="2016-01-06T05:20:04+00:00">05:20:04</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>there's no reason *not* to use thumb2</q></li>
<li class="message">[<a href="#T05:20:20" id="T05:20:20"><abbr title="2016-01-06T05:20:20+00:00">05:20:20</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>you can actually assemble the whole thing in arm-mode too if you'd want to for some reason</q></li>
<li class="message">[<a href="#T05:20:28" id="T05:20:28"><abbr title="2016-01-06T05:20:28+00:00">05:20:28</abbr></a>] &lt;<cite>yates</cite>&gt; <q>of course.</q></li>
<li class="message">[<a href="#T05:21:17" id="T05:21:17"><abbr title="2016-01-06T05:21:17+00:00">05:21:17</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>all my baremetal code is thumb2, except for the single instruction at the entrypoint to switch to thumb mode (since pubrom executes the image in arm mode)</q></li>
<li class="message">[<a href="#T05:22:00" id="T05:22:00"><abbr title="2016-01-06T05:22:00+00:00">05:22:00</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>I noticed I dump the ddr pll also in my clock-config dump, I'll compile it and run it for you</q></li>
<li class="message">[<a href="#T05:23:54" id="T05:23:54"><abbr title="2016-01-06T05:23:54+00:00">05:23:54</abbr></a>] &lt;<cite>yates</cite>&gt; <q>zmatt: btw, my question yesterday on the bus error was when i disassembled. there was no writing being done.</q></li>
<li class="message">[<a href="#T05:24:52" id="T05:24:52"><abbr title="2016-01-06T05:24:52+00:00">05:24:52</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i think i may have had a combination of problems, though, mostly transient. seems like after i reset power, replugged the xds usb, etc., it works fine.</q></li>
<li class="message">[<a href="#T05:24:57" id="T05:24:57"><abbr title="2016-01-06T05:24:57+00:00">05:24:57</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>ok</q></li>
<li class="message">[<a href="#T05:27:31" id="T05:27:31"><abbr title="2016-01-06T05:27:31+00:00">05:27:31</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>ddr pll is not initialized</q></li>
<li class="message">[<a href="#T05:28:37" id="T05:28:37"><abbr title="2016-01-06T05:28:37+00:00">05:28:37</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q><a href="http://pastebin.com/HJRK0usu">http://pastebin.com/HJRK0usu</a></q></li>
<li class="quit">[<a href="#T05:31:39" id="T05:31:39"><abbr title="2016-01-06T05:31:39+00:00">05:31:39</abbr></a>] <span>* iandow (~iandow@71-36-104-124.ptld.qwest.net) Quit (Remote host closed the connection)</span></li>
<li class="message">[<a href="#T05:31:43" id="T05:31:43"><abbr title="2016-01-06T05:31:43+00:00">05:31:43</abbr></a>] &lt;<cite>yates</cite>&gt; <q>bummer</q></li>
<li class="message">[<a href="#T05:31:51" id="T05:31:51"><abbr title="2016-01-06T05:31:51+00:00">05:31:51</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>easy enough to initialize it though</q></li>
<li class="message">[<a href="#T05:31:56" id="T05:31:56"><abbr title="2016-01-06T05:31:56+00:00">05:31:56</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>i am pretty sure they are not optimal</q></li>
<li class="message">[<a href="#T05:32:54" id="T05:32:54"><abbr title="2016-01-06T05:32:54+00:00">05:32:54</abbr></a>] &lt;<cite>yates</cite>&gt; <q>few things seem to be easy on this monster of a processor..</q></li>
<li class="message">[<a href="#T05:33:15" id="T05:33:15"><abbr title="2016-01-06T05:33:15+00:00">05:33:15</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>it isn't that bad</q></li>
<li class="join">[<a href="#T05:33:25" id="T05:33:25"><abbr title="2016-01-06T05:33:25+00:00">05:33:25</abbr></a>] <span>* iandow (~iandow@71-36-104-124.ptld.qwest.net) has joined #beaglebone</span></li>
<li class="message">[<a href="#T05:33:37" id="T05:33:37"><abbr title="2016-01-06T05:33:37+00:00">05:33:37</abbr></a>] &lt;<cite>ds2</cite>&gt; <q>it is your fault for not using U-boot ;)</q></li>
<li class="message">[<a href="#T05:33:42" id="T05:33:42"><abbr title="2016-01-06T05:33:42+00:00">05:33:42</abbr></a>] &lt;<cite>yates</cite>&gt; <q>neither are finite fields.</q></li>
<li class="message">[<a href="#T05:33:54" id="T05:33:54"><abbr title="2016-01-06T05:33:54+00:00">05:33:54</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>finite fields are very elegant</q></li>
<li class="message">[<a href="#T05:34:05" id="T05:34:05"><abbr title="2016-01-06T05:34:05+00:00">05:34:05</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>this cpu's prcm isn't remotely</q></li>
<li class="message">[<a href="#T05:34:19" id="T05:34:19"><abbr title="2016-01-06T05:34:19+00:00">05:34:19</abbr></a>] &lt;<cite>yates</cite>&gt; <q>iirc, galois' five theorems were pretty intense.</q></li>
<li class="message">[<a href="#T05:34:53" id="T05:34:53"><abbr title="2016-01-06T05:34:53+00:00">05:34:53</abbr></a>] &lt;<cite>yates</cite>&gt; <q>oh, well sure, if your IQ is 165, it's pretty easy...</q></li>
<li class="message">[<a href="#T05:35:32" id="T05:35:32"><abbr title="2016-01-06T05:35:32+00:00">05:35:32</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>I do recall having trouble grasping inseparable extensions, though in retrospect i don't understand anymore why I had trouble with them</q></li>
<li class="message">[<a href="#T05:35:42" id="T05:35:42"><abbr title="2016-01-06T05:35:42+00:00">05:35:42</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>but that's not an issue with finite fields anyway :)</q></li>
<li class="message">[<a href="#T05:35:56" id="T05:35:56"><abbr title="2016-01-06T05:35:56+00:00">05:35:56</abbr></a>] &lt;<cite>yates</cite>&gt; <q>that's general field theory, right?</q></li>
<li class="message">[<a href="#T05:36:31" id="T05:36:31"><abbr title="2016-01-06T05:36:31+00:00">05:36:31</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yeah, both finite fields and fields of char 0 only have separable extensions</q></li>
<li class="message">[<a href="#T05:36:59" id="T05:36:59"><abbr title="2016-01-06T05:36:59+00:00">05:36:59</abbr></a>] &lt;<cite>yates</cite>&gt; <q>don't make me break out my Herstein...</q></li>
<li class="message">[<a href="#T05:38:28" id="T05:38:28"><abbr title="2016-01-06T05:38:28+00:00">05:38:28</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>the simplest example of an inseparable one is by taking the function field F_p(X) for some prime p, and then extend it by adjoint the p'th root of X</q></li>
<li class="message">[<a href="#T05:38:36" id="T05:38:36"><abbr title="2016-01-06T05:38:36+00:00">05:38:36</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>*adjoin</q></li>
<li class="message">[<a href="#T05:39:30" id="T05:39:30"><abbr title="2016-01-06T05:39:30+00:00">05:39:30</abbr></a>] &lt;<cite>yates</cite>&gt; <q>zmatt: it's been 12 years since i had this class...</q></li>
<li class="message">[<a href="#T05:39:33" id="T05:39:33"><abbr title="2016-01-06T05:39:33+00:00">05:39:33</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>hehe</q></li>
<li class="message">[<a href="#T05:39:39" id="T05:39:39"><abbr title="2016-01-06T05:39:39+00:00">05:39:39</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>been a while for me too</q></li>
<li class="join">[<a href="#T05:40:33" id="T05:40:33"><abbr title="2016-01-06T05:40:33+00:00">05:40:33</abbr></a>] <span>* arianepaola_ (~ariane@unaffiliated/arianepaola) has joined #beagle</span></li>
<li class="message">[<a href="#T05:40:54" id="T05:40:54"><abbr title="2016-01-06T05:40:54+00:00">05:40:54</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>anyhow, the icky part is that the characteristic polynomial has multiple roots... in fact all p of them are the same</q></li>
<li class="quit">[<a href="#T05:40:55" id="T05:40:55"><abbr title="2016-01-06T05:40:55+00:00">05:40:55</abbr></a>] <span>* arianepaola (~ariane@unaffiliated/arianepaola) Quit (Ping timeout: 260 seconds)</span></li>
<li class="message">[<a href="#T05:41:03" id="T05:41:03"><abbr title="2016-01-06T05:41:03+00:00">05:41:03</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>which is a really odd situation</q></li>
<li class="message">[<a href="#T05:41:44" id="T05:41:44"><abbr title="2016-01-06T05:41:44+00:00">05:41:44</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>f(x) = x^p - X    is irreducible in F_p(X)</q></li>
<li class="message">[<a href="#T05:42:17" id="T05:42:17"><abbr title="2016-01-06T05:42:17+00:00">05:42:17</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yet once you adjoin one root, say α, then it splits as (x - α)^p</q></li>
<li class="message">[<a href="#T05:43:24" id="T05:43:24"><abbr title="2016-01-06T05:43:24+00:00">05:43:24</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>I think we drifted slightly off-topic though</q></li>
<li class="message">[<a href="#T05:43:25" id="T05:43:25"><abbr title="2016-01-06T05:43:25+00:00">05:43:25</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>;)</q></li>
<li class="join">[<a href="#T05:43:43" id="T05:43:43"><abbr title="2016-01-06T05:43:43+00:00">05:43:43</abbr></a>] <span>* Apocx_ (~quassel@65.246.43.225) has joined #beagle</span></li>
<li class="message">[<a href="#T05:43:47" id="T05:43:47"><abbr title="2016-01-06T05:43:47+00:00">05:43:47</abbr></a>] &lt;<cite>yates</cite>&gt; <q>yeah.</q></li>
<li class="message">[<a href="#T05:44:20" id="T05:44:20"><abbr title="2016-01-06T05:44:20+00:00">05:44:20</abbr></a>] &lt;<cite>yates</cite>&gt; <q>if you have the jtag plugged in to the target board, but have disconnected the usb, will it keep the processor halted?</q></li>
<li class="message">[<a href="#T05:44:23" id="T05:44:23"><abbr title="2016-01-06T05:44:23+00:00">05:44:23</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>configuring the PLL, I think you just need to write 3 registers</q></li>
<li class="message">[<a href="#T05:44:55" id="T05:44:55"><abbr title="2016-01-06T05:44:55+00:00">05:44:55</abbr></a>] &lt;<cite>yates</cite>&gt; <q>if i cycle power on the board, will it just stop (i guess at 0x00020000, public rom, as you said)?</q></li>
<li class="message">[<a href="#T05:45:13" id="T05:45:13"><abbr title="2016-01-06T05:45:13+00:00">05:45:13</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>depends on whether you enabled break at reset</q></li>
<li class="message">[<a href="#T05:45:16" id="T05:45:16"><abbr title="2016-01-06T05:45:16+00:00">05:45:16</abbr></a>] &lt;<cite>yates</cite>&gt; <q>that's not bad</q></li>
<li class="message">[<a href="#T05:45:30" id="T05:45:30"><abbr title="2016-01-06T05:45:30+00:00">05:45:30</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>and not sure whether it's retained if you unplug, I think it is</q></li>
<li class="message">[<a href="#T05:45:51" id="T05:45:51"><abbr title="2016-01-06T05:45:51+00:00">05:45:51</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>it probably does perform a TAP reset if you have a pulldown on nTRST</q></li>
<li class="quit">[<a href="#T05:45:53" id="T05:45:53"><abbr title="2016-01-06T05:45:53+00:00">05:45:53</abbr></a>] <span>* Apocx (~quassel@65.246.43.225) Quit (Ping timeout: 246 seconds)</span></li>
<li class="message">[<a href="#T05:46:06" id="T05:46:06"><abbr title="2016-01-06T05:46:06+00:00">05:46:06</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>since the xds100v2 will go high-Z on all pins</q></li>
<li class="message">[<a href="#T05:46:46" id="T05:46:46"><abbr title="2016-01-06T05:46:46+00:00">05:46:46</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>this might or might not deassert DBGEN, I'm really not sure</q></li>
<li class="message">[<a href="#T05:47:21" id="T05:47:21"><abbr title="2016-01-06T05:47:21+00:00">05:47:21</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>generally best to resume the cpu before disconnecting, or power cycle the board</q></li>
<li class="message">[<a href="#T05:47:23" id="T05:47:23"><abbr title="2016-01-06T05:47:23+00:00">05:47:23</abbr></a>] &lt;<cite>yates</cite>&gt; <q>what initial user-code address does the public rom code jump to after loading it into ram?</q></li>
<li class="message">[<a href="#T05:47:57" id="T05:47:57"><abbr title="2016-01-06T05:47:57+00:00">05:47:57</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>in case of MLO (sd/mmc, spi flash, etc) you can specify the address, although it needs to be in internal SRAM</q></li>
<li class="message">[<a href="#T05:48:22" id="T05:48:22"><abbr title="2016-01-06T05:48:22+00:00">05:48:22</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>in case of peripheral boot (usb, uart, ethernet) it's always 0x4002f400</q></li>
<li class="message">[<a href="#T05:49:05" id="T05:49:05"><abbr title="2016-01-06T05:49:05+00:00">05:49:05</abbr></a>] &lt;<cite>yates</cite>&gt; <q>ok.</q></li>
<li class="message">[<a href="#T05:49:41" id="T05:49:41"><abbr title="2016-01-06T05:49:41+00:00">05:49:41</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>to change it I think you need to modify it in two places in my demo: the linker script and the makefile (which passes it as argument to the script that builds the mlo header)</q></li>
<li class="message">[<a href="#T05:49:54" id="T05:49:54"><abbr title="2016-01-06T05:49:54+00:00">05:49:54</abbr></a>] &lt;<cite>yates</cite>&gt; <q>no, it's fine.</q></li>
<li class="message">[<a href="#T05:50:31" id="T05:50:31"><abbr title="2016-01-06T05:50:31+00:00">05:50:31</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>sorry I meant 0x402f0400 btw</q></li>
<li class="message">[<a href="#T05:50:52" id="T05:50:52"><abbr title="2016-01-06T05:50:52+00:00">05:50:52</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>there's some benefit to using 0x40300000 instead (ocmc ram)</q></li>
<li class="message">[<a href="#T05:50:55" id="T05:50:55"><abbr title="2016-01-06T05:50:55+00:00">05:50:55</abbr></a>] &lt;<cite>yates</cite>&gt; <q>ok, about these interrupt vectors, e.g., .fun vectors with init, exc_undef, etc., where is this documented</q></li>
<li class="message">[<a href="#T05:50:56" id="T05:50:56"><abbr title="2016-01-06T05:50:56+00:00">05:50:56</abbr></a>] &lt;<cite>yates</cite>&gt; <q>?</q></li>
<li class="message">[<a href="#T05:51:08" id="T05:51:08"><abbr title="2016-01-06T05:51:08+00:00">05:51:08</abbr></a>] &lt;<cite>yates</cite>&gt; <q>what?</q></li>
<li class="message">[<a href="#T05:51:18" id="T05:51:18"><abbr title="2016-01-06T05:51:18+00:00">05:51:18</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>since it's accessible from DAP, while the a8-local RAM is only accessible from the a8</q></li>
<li class="message">[<a href="#T05:51:29" id="T05:51:29"><abbr title="2016-01-06T05:51:29+00:00">05:51:29</abbr></a>] &lt;<cite>yates</cite>&gt; <q>DAP?</q></li>
<li class="message">[<a href="#T05:51:30" id="T05:51:30"><abbr title="2016-01-06T05:51:30+00:00">05:51:30</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>so you cannot examine the a8-local RAM without halting the CPU</q></li>
<li class="message">[<a href="#T05:51:46" id="T05:51:46"><abbr title="2016-01-06T05:51:46+00:00">05:51:46</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>the Debug Access Port</q></li>
<li class="message">[<a href="#T05:52:01" id="T05:52:01"><abbr title="2016-01-06T05:52:01+00:00">05:52:01</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>it has direct access to the L3 interconnect, and to the debug interconnect (L4EMU)</q></li>
<li class="message">[<a href="#T05:52:22" id="T05:52:22"><abbr title="2016-01-06T05:52:22+00:00">05:52:22</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i'll keep that in mind.</q></li>
<li class="message">[<a href="#T05:52:27" id="T05:52:27"><abbr title="2016-01-06T05:52:27+00:00">05:52:27</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>via the debug interconnect it can halt the cpu, examine its state, and make it execute instruction e.g. to access its local RAM and peripherals</q></li>
<li class="message">[<a href="#T05:52:56" id="T05:52:56"><abbr title="2016-01-06T05:52:56+00:00">05:52:56</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>I'm not sure if CCS is smart enough to automatically route transactions via DAP when possible</q></li>
<li class="message">[<a href="#T05:53:17" id="T05:53:17"><abbr title="2016-01-06T05:53:17+00:00">05:53:17</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>via its L3 access port I mean</q></li>
<li class="message">[<a href="#T05:53:32" id="T05:53:32"><abbr title="2016-01-06T05:53:32+00:00">05:53:32</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i am really interested in the interrupts. as i stated earlier, all i see is the emuint, commtx, commrx, etc. in table 6-1 of the am335x trm.</q></li>
<li class="message">[<a href="#T05:53:47" id="T05:53:47"><abbr title="2016-01-06T05:53:47+00:00">05:53:47</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>that's all outside the cortex-a8</q></li>
<li class="message">[<a href="#T05:53:52" id="T05:53:52"><abbr title="2016-01-06T05:53:52+00:00">05:53:52</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>and routed to its IRQ pin</q></li>
<li class="message">[<a href="#T05:54:09" id="T05:54:09"><abbr title="2016-01-06T05:54:09+00:00">05:54:09</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>the interrupt controller is not from ARM but from TI</q></li>
<li class="message">[<a href="#T05:54:28" id="T05:54:28"><abbr title="2016-01-06T05:54:28+00:00">05:54:28</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>the exception vector table however *is* an ARM-specific thing</q></li>
<li class="message">[<a href="#T05:54:42" id="T05:54:42"><abbr title="2016-01-06T05:54:42+00:00">05:54:42</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>hence you find its details in ARM documentation</q></li>
<li class="message">[<a href="#T05:55:10" id="T05:55:10"><abbr title="2016-01-06T05:55:10+00:00">05:55:10</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>either the TRM or the architecture reference manual.. I think the former summarizes it and the latter describes it in more detail</q></li>
<li class="message">[<a href="#T05:55:33" id="T05:55:33"><abbr title="2016-01-06T05:55:33+00:00">05:55:33</abbr></a>] &lt;<cite>yates</cite>&gt; <q>oh, so the interrupt table captioned "ARM Cortex-A8 Interrupts" are not the ARM Cortex-A8 Interrupts?</q></li>
<li class="message">[<a href="#T05:55:39" id="T05:55:39"><abbr title="2016-01-06T05:55:39+00:00">05:55:39</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>they are</q></li>
<li class="message">[<a href="#T05:55:40" id="T05:55:40"><abbr title="2016-01-06T05:55:40+00:00">05:55:40</abbr></a>] &lt;<cite>yates</cite>&gt; <q>sheesh, how stupid of me..</q></li>
<li class="message">[<a href="#T05:55:48" id="T05:55:48"><abbr title="2016-01-06T05:55:48+00:00">05:55:48</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>but "interrupt" is only one of the exceptions</q></li>
<li class="message">[<a href="#T05:55:54" id="T05:55:54"><abbr title="2016-01-06T05:55:54+00:00">05:55:54</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>the exc_irq</q></li>
<li class="message">[<a href="#T05:56:18" id="T05:56:18"><abbr title="2016-01-06T05:56:18+00:00">05:56:18</abbr></a>] &lt;<cite>yates</cite>&gt; <q>you just stated they are "outside the cortex-a8". which is it?</q></li>
<li class="message">[<abbr title="2016-01-06T05:56:18+00:00">05:56:18</abbr>] &lt;<cite>zmatt</cite>&gt; <q>a memory fault or undefined instruction isn't an irq</q></li>
<li class="message">[<a href="#T05:57:08" id="T05:57:08"><abbr title="2016-01-06T05:57:08+00:00">05:57:08</abbr></a>] &lt;<cite>yates</cite>&gt; <q>by irq you mean from a hardware pin?</q></li>
<li class="message">[<a href="#T05:57:21" id="T05:57:21"><abbr title="2016-01-06T05:57:21+00:00">05:57:21</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>the interrupt controller is just a separate block meant to filter and prioritize the 128 irqs going to the cortex-a8 subsystem into a single irq signal to the cortex-a8 cpu itself</q></li>
<li class="message">[<a href="#T05:58:25" id="T05:58:25"><abbr title="2016-01-06T05:58:25+00:00">05:58:25</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i think i see.</q></li>
<li class="message">[<a href="#T05:58:38" id="T05:58:38"><abbr title="2016-01-06T05:58:38+00:00">05:58:38</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>this triggers exc_irq</q></li>
<li class="message">[<a href="#T05:58:49" id="T05:58:49"><abbr title="2016-01-06T05:58:49+00:00">05:58:49</abbr></a>] &lt;<cite>yates</cite>&gt; <q>so the actual cortex a8 interrupts are in which arm document? the trm? the arm?</q></li>
<li class="message">[<a href="#T05:58:58" id="T05:58:58"><abbr title="2016-01-06T05:58:58+00:00">05:58:58</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>which then queries the interrupt controller to ask which of the 128 sources has been triggered</q></li>
<li class="message">[<abbr title="2016-01-06T05:58:58+00:00">05:58:58</abbr>] &lt;<cite>yates</cite>&gt; <q>or "exceptions"?</q></li>
<li class="message">[<a href="#T05:59:48" id="T05:59:48"><abbr title="2016-01-06T05:59:48+00:00">05:59:48</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i see references to EXC_DABORT in the PMU of the arm.</q></li>
<li class="message">[<a href="#T05:59:56" id="T05:59:56"><abbr title="2016-01-06T05:59:56+00:00">05:59:56</abbr></a>] &lt;<cite>yates</cite>&gt; <q>e.g.,</q></li>
<li class="message">[<a href="#T06:00:13" id="T06:00:13"><abbr title="2016-01-06T06:00:13+00:00">06:00:13</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>there are only 8:  { reset, undef, syscall, iabort, dabort, &lt;reserved&gt;, irq, fiq }</q></li>
<li class="message">[<a href="#T06:00:32" id="T06:00:32"><abbr title="2016-01-06T06:00:32+00:00">06:00:32</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>each is expected to be a 4-byte instruction</q></li>
<li class="message">[<a href="#T06:00:39" id="T06:00:39"><abbr title="2016-01-06T06:00:39+00:00">06:00:39</abbr></a>] &lt;<cite>yates</cite>&gt; <q>where is that defined? i've looked, sorry if am asking you to hold my hand...</q></li>
<li class="message">[<a href="#T06:00:46" id="T06:00:46"><abbr title="2016-01-06T06:00:46+00:00">06:00:46</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>arm architecture ref</q></li>
<li class="message">[<a href="#T06:00:53" id="T06:00:53"><abbr title="2016-01-06T06:00:53+00:00">06:00:53</abbr></a>] &lt;<cite>yates</cite>&gt; <q>ok</q></li>
<li class="message">[<a href="#T06:01:06" id="T06:01:06"><abbr title="2016-01-06T06:01:06+00:00">06:01:06</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>in this case we don't control the actual reset vector</q></li>
<li class="message">[<a href="#T06:01:24" id="T06:01:24"><abbr title="2016-01-06T06:01:24+00:00">06:01:24</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>but I use it as entrypoint of my program</q></li>
<li class="message">[<a href="#T06:02:00" id="T06:02:00"><abbr title="2016-01-06T06:02:00+00:00">06:02:00</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>it calls init with 'bl' to put the exception table address + 4 into LR, with bit 0 indicating thumb-mode</q></li>
<li class="message">[<a href="#T06:02:01" id="T06:02:01"><abbr title="2016-01-06T06:02:01+00:00">06:02:01</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i'm looking at the "ARM Architecture Reference Manual: ARMv7-A and ARMv7-R edition" - do i have the wrong document?</q></li>
<li class="message">[<a href="#T06:02:06" id="T06:02:06"><abbr title="2016-01-06T06:02:06+00:00">06:02:06</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>nope, it's in there</q></li>
<li class="message">[<a href="#T06:02:19" id="T06:02:19"><abbr title="2016-01-06T06:02:19+00:00">06:02:19</abbr></a>] &lt;<cite>yates</cite>&gt; <q>a search fo undef fails</q></li>
<li class="message">[<a href="#T06:02:30" id="T06:02:30"><abbr title="2016-01-06T06:02:30+00:00">06:02:30</abbr></a>] &lt;<cite>yates</cite>&gt; <q>wait, no.</q></li>
<li class="message">[<a href="#T06:02:37" id="T06:02:37"><abbr title="2016-01-06T06:02:37+00:00">06:02:37</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>I may have given some of them saner names</q></li>
<li class="message">[<a href="#T06:02:43" id="T06:02:43"><abbr title="2016-01-06T06:02:43+00:00">06:02:43</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>i.e. iabort is called "prefetch abort"</q></li>
<li class="message">[<a href="#T06:02:56" id="T06:02:56"><abbr title="2016-01-06T06:02:56+00:00">06:02:56</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>undef is still undef though</q></li>
<li class="message">[<a href="#T06:02:59" id="T06:02:59"><abbr title="2016-01-06T06:02:59+00:00">06:02:59</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>or "undefined"</q></li>
<li class="message">[<a href="#T06:03:14" id="T06:03:14"><abbr title="2016-01-06T06:03:14+00:00">06:03:14</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>triggered by undefined instructions or bogus processor state</q></li>
<li class="message">[<a href="#T06:05:14" id="T06:05:14"><abbr title="2016-01-06T06:05:14+00:00">06:05:14</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>btw, the ".handler" and "hret" macros I defined take care of annoying boilerplate and make exceptions behave more sanely, similar to the cortex-M (and I think AArch64 went the same direction as well)</q></li>
<li class="message">[<a href="#T06:05:59" id="T06:05:59"><abbr title="2016-01-06T06:05:59+00:00">06:05:59</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>except you still need to push/pop some regs that would be automatically pushed on the cortex-M</q></li>
<li class="message">[<a href="#T06:06:08" id="T06:06:08"><abbr title="2016-01-06T06:06:08+00:00">06:06:08</abbr></a>] &lt;<cite>yates</cite>&gt; <q>yeah, i finally noticed those.</q></li>
<li class="message">[<a href="#T06:06:28" id="T06:06:28"><abbr title="2016-01-06T06:06:28+00:00">06:06:28</abbr></a>] &lt;<cite>yates</cite>&gt; <q>pretty tricky to call the one "ret" though! i thought that was an instruction</q></li>
<li class="message">[<a href="#T06:06:53" id="T06:06:53"><abbr title="2016-01-06T06:06:53+00:00">06:06:53</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>well, it is an instruction, I just gave it a shorter name</q></li>
<li class="message">[<a href="#T06:07:07" id="T06:07:07"><abbr title="2016-01-06T06:07:07+00:00">06:07:07</abbr></a>] &lt;<cite>yates</cite>&gt; <q>also, i noticed that's only for a one-level call stack.</q></li>
<li class="message">[<a href="#T06:07:13" id="T06:07:13"><abbr title="2016-01-06T06:07:13+00:00">06:07:13</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>no</q></li>
<li class="message">[<a href="#T06:07:21" id="T06:07:21"><abbr title="2016-01-06T06:07:21+00:00">06:07:21</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>unified stack, not one-level</q></li>
<li class="message">[<a href="#T06:07:25" id="T06:07:25"><abbr title="2016-01-06T06:07:25+00:00">06:07:25</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>it nests just fine</q></li>
<li class="message">[<a href="#T06:07:31" id="T06:07:31"><abbr title="2016-01-06T06:07:31+00:00">06:07:31</abbr></a>] &lt;<cite>yates</cite>&gt; <q>where are you using a stack?</q></li>
<li class="message">[<a href="#T06:07:41" id="T06:07:41"><abbr title="2016-01-06T06:07:41+00:00">06:07:41</abbr></a>] &lt;<cite>yates</cite>&gt; <q>you just stuff the return addressing into lr, right?</q></li>
<li class="message">[<a href="#T06:07:52" id="T06:07:52"><abbr title="2016-01-06T06:07:52+00:00">06:07:52</abbr></a>] &lt;<cite>yates</cite>&gt; <q>..address</q></li>
<li class="message">[<a href="#T06:08:33" id="T06:08:33"><abbr title="2016-01-06T06:08:33+00:00">06:08:33</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>srsfd pushes the lr and spsr of the current cpu mode onto the stack of another cpu mode</q></li>
<li class="message">[<a href="#T06:09:16" id="T06:09:16"><abbr title="2016-01-06T06:09:16+00:00">06:09:16</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>oh, that comment on line 12 is wrong, should be "{ lr, spsr } of cur mode" or something</q></li>
<li class="message">[<a href="#T06:09:59" id="T06:09:59"><abbr title="2016-01-06T06:09:59+00:00">06:09:59</abbr></a>] &lt;<cite>yates</cite>&gt; <q>are you talking about in asm-defs.h?</q></li>
<li class="message">[<a href="#T06:10:03" id="T06:10:03"><abbr title="2016-01-06T06:10:03+00:00">06:10:03</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>srs and rfe were introduced exactly to allow using a single stack for all exceptions</q></li>
<li class="message">[<a href="#T06:10:06" id="T06:10:06"><abbr title="2016-01-06T06:10:06+00:00">06:10:06</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>no, vectors.S</q></li>
<li class="message">[<a href="#T06:10:22" id="T06:10:22"><abbr title="2016-01-06T06:10:22+00:00">06:10:22</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>in the .handler macro definition</q></li>
<li class="message">[<a href="#T06:10:50" id="T06:10:50"><abbr title="2016-01-06T06:10:50+00:00">06:10:50</abbr></a>] &lt;<cite>yates</cite>&gt; <q>i'm talking about .fun's and ret's.</q></li>
<li class="message">[<a href="#T06:11:03" id="T06:11:03"><abbr title="2016-01-06T06:11:03+00:00">06:11:03</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>.fun is just assembler boilerplate</q></li>
<li class="message">[<a href="#T06:12:03" id="T06:12:03"><abbr title="2016-01-06T06:12:03+00:00">06:12:03</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>to make the right kind of symbol, and help give them correct sizes</q></li>
<li class="message">[<a href="#T06:12:49" id="T06:12:49"><abbr title="2016-01-06T06:12:49+00:00">06:12:49</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>.fun and .var should officially be terminated by .done to set their size, but this is only needed at end of file since each already performs an implicit .done</q></li>
<li class="message">[<a href="#T06:14:19" id="T06:14:19"><abbr title="2016-01-06T06:14:19+00:00">06:14:19</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yates: ARM exceptions are burdened by lots of historical baggage</q></li>
<li class="message">[<a href="#T06:14:45" id="T06:14:45"><abbr title="2016-01-06T06:14:45+00:00">06:14:45</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>they're quite possibly the ugliest part of the architecture</q></li>
<li class="message">[<a href="#T06:17:25" id="T06:17:25"><abbr title="2016-01-06T06:17:25+00:00">06:17:25</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>hmm, I notice I made changes to this code in my main codebase... maybe I should port those over</q></li>
<li class="message">[<a href="#T06:25:03" id="T06:25:03"><abbr title="2016-01-06T06:25:03+00:00">06:25:03</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>hi yates</q></li>
<li class="message">[<a href="#T06:25:09" id="T06:25:09"><abbr title="2016-01-06T06:25:09+00:00">06:25:09</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>so, this is what my current start.S looks like, which is the only assembly source file in my C/C++ code:  <a href="http://gerbil.xs4all.nl/start.S.html">http://gerbil.xs4all.nl/start.S.html</a></q></li>
<li class="message">[<a href="#T06:25:23" id="T06:25:23"><abbr title="2016-01-06T06:25:23+00:00">06:25:23</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>thaks its done . adding qt application to startup</q></li>
<li class="message">[<a href="#T06:28:20" id="T06:28:20"><abbr title="2016-01-06T06:28:20+00:00">06:28:20</abbr></a>] &lt;<cite>yates</cite>&gt; <q>abhi_: you are welcome. good deal!</q></li>
<li class="message">[<a href="#T06:28:36" id="T06:28:36"><abbr title="2016-01-06T06:28:36+00:00">06:28:36</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>but i have one more problem</q></li>
<li class="message">[<a href="#T06:29:07" id="T06:29:07"><abbr title="2016-01-06T06:29:07+00:00">06:29:07</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>the thing is that when i boot up it echos some stuffs</q></li>
<li class="message">[<a href="#T06:30:00" id="T06:30:00"><abbr title="2016-01-06T06:30:00+00:00">06:30:00</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>means the system</q></li>
<li class="message">[<a href="#T06:30:10" id="T06:30:10"><abbr title="2016-01-06T06:30:10+00:00">06:30:10</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>then my qt applications runs</q></li>
<li class="message">[<a href="#T06:30:13" id="T06:30:13"><abbr title="2016-01-06T06:30:13+00:00">06:30:13</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yates: I notice some subtle differences, i.e. in my handler entry I now use "cpsid ia" instead of "cps", this prevents different handlers from interrupting each other as much as possible, saves some headache</q></li>
<li class="join">[<a href="#T06:30:52" id="T06:30:52"><abbr title="2016-01-06T06:30:52+00:00">06:30:52</abbr></a>] <span>* calculus (~calculus@gentoo/user/calculus) has joined #beagle</span></li>
<li class="mode">[<abbr title="2016-01-06T06:30:52+00:00">06:30:52</abbr>] <span>* ChanServ sets mode +o calculus</span></li>
<li class="join">[<a href="#T06:31:17" id="T06:31:17"><abbr title="2016-01-06T06:31:17+00:00">06:31:17</abbr></a>] <span>* ketas (~ketas@229-211-191-90.dyn.estpak.ee) has joined #beaglebone</span></li>
<li class="join">[<abbr title="2016-01-06T06:31:17+00:00">06:31:17</abbr>] <span>* ketas (~ketas@229-211-191-90.dyn.estpak.ee) has joined #beagle</span></li>
<li class="message">[<a href="#T06:34:19" id="T06:34:19"><abbr title="2016-01-06T06:34:19+00:00">06:34:19</abbr></a>] &lt;<cite>yates</cite>&gt; <q>abhi_: so what?</q></li>
<li class="message">[<a href="#T06:35:09" id="T06:35:09"><abbr title="2016-01-06T06:35:09+00:00">06:35:09</abbr></a>] &lt;<cite>yates</cite>&gt; <q>zmatt: i was just interested in interrupts from the macro level. all i'm really handling is the switch...</q></li>
<li class="message">[<a href="#T06:35:45" id="T06:35:45"><abbr title="2016-01-06T06:35:45+00:00">06:35:45</abbr></a>] &lt;<cite>yates</cite>&gt; <q>modify your qt app so it doesn't echo anything, if that's a problem.</q></li>
<li class="message">[<a href="#T06:36:33" id="T06:36:33"><abbr title="2016-01-06T06:36:33+00:00">06:36:33</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yates: so the flow of an interrupt is:  irq line asserted to subsystem, if enabled in interrupt controller this triggers the prioritization process and in parallel asserts the nIRQ input of the cortex-a8</q></li>
<li class="message">[<a href="#T06:36:55" id="T06:36:55"><abbr title="2016-01-06T06:36:55+00:00">06:36:55</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>if interrupts are enabled then the a8 will take the irq exception</q></li>
<li class="message">[<a href="#T06:38:33" id="T06:38:33"><abbr title="2016-01-06T06:38:33+00:00">06:38:33</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>yates: the linux echo's on startup. how to disable that?</q></li>
<li class="message">[<a href="#T06:38:34" id="T06:38:34"><abbr title="2016-01-06T06:38:34+00:00">06:38:34</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>my macro (.handler in bbb-asm-demo, henter in my current code)  will cleanly stack that on top of the "handler" stack and switch to "handler" mode (as asm-defs explains this is "system mode" currently but could be "supervisor mode" instead)</q></li>
<li class="message">[<a href="#T06:38:48" id="T06:38:48"><abbr title="2016-01-06T06:38:48+00:00">06:38:48</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>but with irqs disabled at this point</q></li>
<li class="message">[<a href="#T06:40:05" id="T06:40:05"><abbr title="2016-01-06T06:40:05+00:00">06:40:05</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>then the interrupt controller is consulted to figure out what irq was asserted... this is done directly in exc_irq in bbb-asm-demo, but I'd normally do that in C/C++</q></li>
<li class="message">[<a href="#T06:41:28" id="T06:41:28"><abbr title="2016-01-06T06:41:28+00:00">06:41:28</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>nested irqs are possible if desired, it would require raising the base priority in the interrupt controller and then reenabling interrupts, and on exit disable irqs, restore base priority, eoi, hret</q></li>
<li class="message">[<a href="#T06:42:17" id="T06:42:17"><abbr title="2016-01-06T06:42:17+00:00">06:42:17</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>(this would get you nested irqs similar to those on the cortex-M, but with more boilerplate)</q></li>
<li class="message">[<a href="#T06:45:34" id="T06:45:34"><abbr title="2016-01-06T06:45:34+00:00">06:45:34</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>in my current codebase I actually went the other way: I don't enable irqs at all, instead I enter 'idle' after initialization, which does a wfi (which still performs its job with irqs disabled) and directly calls the irq dispatcher</q></li>
<li class="message">[<a href="#T06:45:53" id="T06:45:53"><abbr title="2016-01-06T06:45:53+00:00">06:45:53</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>saves overhead of stacking/unstacking the irq exception</q></li>
<li class="message">[<a href="#T06:47:04" id="T06:47:04"><abbr title="2016-01-06T06:47:04+00:00">06:47:04</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>basically acts like a main event loop</q></li>
<li class="message">[<a href="#T06:49:28" id="T06:49:28"><abbr title="2016-01-06T06:49:28+00:00">06:49:28</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>Hi all . How to disable linux echo on startup. I have qt application and at boot i have added it to systemd. It runs as the system powers up. But before that bbb echos some stuffs. How to disable it</q></li>
<li class="message">[<a href="#T06:50:01" id="T06:50:01"><abbr title="2016-01-06T06:50:01+00:00">06:50:01</abbr></a>] &lt;<cite>abhi_</cite>&gt; <q>i want to remove all the text</q></li>
<li class="join">[<a href="#T06:52:25" id="T06:52:25"><abbr title="2016-01-06T06:52:25+00:00">06:52:25</abbr></a>] <span>* ayjay (~ajp@216.106.134.175) has joined #beagle</span></li>
<li class="quit">[<a href="#T07:00:13" id="T07:00:13"><abbr title="2016-01-06T07:00:13+00:00">07:00:13</abbr></a>] <span>* ayjay (~ajp@216.106.134.175) Quit (Ping timeout: 265 seconds)</span></li>
<li class="quit">[<a href="#T07:02:12" id="T07:02:12"><abbr title="2016-01-06T07:02:12+00:00">07:02:12</abbr></a>] <span>* nighty^ (~nighty@www.taiyolabs.com) Quit (Remote host closed the connection)</span></li>
<li class="message">[<a href="#T07:06:41" id="T07:06:41"><abbr title="2016-01-06T07:06:41+00:00">07:06:41</abbr></a>] &lt;<cite>yates</cite>&gt; <q>zmatt: so by your pastebin, it's just the pll_ddr that has to be set up and enabled?</q></li>
<li class="message">[<a href="#T07:10:45" id="T07:10:45"><abbr title="2016-01-06T07:10:45+00:00">07:10:45</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yep, and I just verified it's easy indeed:  to be sure it's disabled write 4 to CM_CLKMODE_DPLL_DDR and poll CM_IDLEST_DPLL_DDR until bit 8 is set</q></li>
<li class="message">[<a href="#T07:12:07" id="T07:12:07"><abbr title="2016-01-06T07:12:07+00:00">07:12:07</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>write (24-1) | 400 &lt;&lt; 8 to CM_CLKSEL_DPLL_DDR</q></li>
<li class="message">[<a href="#T07:12:12" id="T07:12:12"><abbr title="2016-01-06T07:12:12+00:00">07:12:12</abbr></a>] &lt;<cite>yates</cite>&gt; <q>don't you have to also setup prescalers etc?</q></li>
<li class="message">[<a href="#T07:12:15" id="T07:12:15"><abbr title="2016-01-06T07:12:15+00:00">07:12:15</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>(assuming 24 MHz osc)</q></li>
<li class="message">[<a href="#T07:12:55" id="T07:12:55"><abbr title="2016-01-06T07:12:55+00:00">07:12:55</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>write 1 to CM_DIV_M2_DPLL_DDR</q></li>
<li class="message">[<a href="#T07:13:15" id="T07:13:15"><abbr title="2016-01-06T07:13:15+00:00">07:13:15</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>write 7 to CM_CLKMODE_DPLL_DDR and poll CM_IDLEST_DPLL_DDR until bit 0 is set</q></li>
<li class="message">[<a href="#T07:13:25" id="T07:13:25"><abbr title="2016-01-06T07:13:25+00:00">07:13:25</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>your pll is now locked</q></li>
<li class="message">[<a href="#T07:14:23" id="T07:14:23"><abbr title="2016-01-06T07:14:23+00:00">07:14:23</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>(dco at 800 MHz, out-m2 at 400 MHz)</q></li>
<li class="message">[<a href="#T07:15:00" id="T07:15:00"><abbr title="2016-01-06T07:15:00+00:00">07:15:00</abbr></a>] &lt;<cite>yates</cite>&gt; <q>huh? are you saying the actual output to the ddr memory is 800 MHz?</q></li>
<li class="quit">[<a href="#T07:15:05" id="T07:15:05"><abbr title="2016-01-06T07:15:05+00:00">07:15:05</abbr></a>] <span>* ByronJoh1son (~bairyn@mail.digitalkingdom.org) Quit (Remote host closed the connection)</span></li>
<li class="message">[<a href="#T07:15:12" id="T07:15:12"><abbr title="2016-01-06T07:15:12+00:00">07:15:12</abbr></a>] &lt;<cite>yates</cite>&gt; <q>what is "dco"?</q></li>
<li class="join">[<a href="#T07:15:23" id="T07:15:23"><abbr title="2016-01-06T07:15:23+00:00">07:15:23</abbr></a>] <span>* ByronJoh1son (~bairyn@mail.digitalkingdom.org) has joined #beagle</span></li>
<li class="message">[<a href="#T07:15:29" id="T07:15:29"><abbr title="2016-01-06T07:15:29+00:00">07:15:29</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>dco is the PLL oscillator freq, out-m2 is the postdivider output</q></li>
<li class="message">[<abbr title="2016-01-06T07:15:29+00:00">07:15:29</abbr>] &lt;<cite>yates</cite>&gt; <q>i thought the emif could only generate a max of 400 MHz.</q></li>
<li class="message">[<a href="#T07:15:39" id="T07:15:39"><abbr title="2016-01-06T07:15:39+00:00">07:15:39</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>both are implicitly multiplied by two</q></li>
<li class="message">[<a href="#T07:15:55" id="T07:15:55"><abbr title="2016-01-06T07:15:55+00:00">07:15:55</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>you need the even postdivider to get a clean symmetrical clock</q></li>
<li class="message">[<a href="#T07:16:09" id="T07:16:09"><abbr title="2016-01-06T07:16:09+00:00">07:16:09</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>hence the PLL is locked at 800 MHz and then divided by two</q></li>
<li class="quit">[<a href="#T07:16:22" id="T07:16:22"><abbr title="2016-01-06T07:16:22+00:00">07:16:22</abbr></a>] <span>* nofxx (~nofxx@unaffiliated/nofxx) Quit (Ping timeout: 272 seconds)</span></li>
<li class="message">[<a href="#T07:16:38" id="T07:16:38"><abbr title="2016-01-06T07:16:38+00:00">07:16:38</abbr></a>] &lt;<cite>yates</cite>&gt; <q>so the actual output to the ddr chip is 400 MHz</q></li>
<li class="message">[<a href="#T07:17:22" id="T07:17:22"><abbr title="2016-01-06T07:17:22+00:00">07:17:22</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>wait, I think it actually needs 800 MHz output, lemme check the docs</q></li>
<li class="message">[<a href="#T07:17:28" id="T07:17:28"><abbr title="2016-01-06T07:17:28+00:00">07:17:28</abbr></a>] &lt;<cite>yates</cite>&gt; <q>is there a diagram you're looking at?</q></li>
<li class="message">[<a href="#T07:17:44" id="T07:17:44"><abbr title="2016-01-06T07:17:44+00:00">07:17:44</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>Figure 8-14. DDR PLL Structure</q></li>
<li class="message">[<a href="#T07:19:07" id="T07:19:07"><abbr title="2016-01-06T07:19:07+00:00">07:19:07</abbr></a>] &lt;<cite>yates</cite>&gt; <q>according to the data sheet, the max DDR clock is 400 MHz. which means our ddr memory is only running at 800 MHz, not 1600 Mhz.</q></li>
<li class="message">[<a href="#T07:19:11" id="T07:19:11"><abbr title="2016-01-06T07:19:11+00:00">07:19:11</abbr></a>] &lt;<cite>yates</cite>&gt; <q>right?</q></li>
<li class="join">[<a href="#T07:21:15" id="T07:21:15"><abbr title="2016-01-06T07:21:15+00:00">07:21:15</abbr></a>] <span>* NulL` (~bleh1@87.254.84.90) has joined #beagle</span></li>
<li class="message">[<a href="#T07:21:21" id="T07:21:21"><abbr title="2016-01-06T07:21:21+00:00">07:21:21</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>it's a little vague, I'm not sure whether the ddr phy macros need to be clocked at the DDR clock speed or twice that speed</q></li>
<li class="message">[<a href="#T07:21:43" id="T07:21:43"><abbr title="2016-01-06T07:21:43+00:00">07:21:43</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>ok, DDR clock</q></li>
<li class="message">[<a href="#T07:21:49" id="T07:21:49"><abbr title="2016-01-06T07:21:49+00:00">07:21:49</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>then the setup I gave above it right</q></li>
<li class="message">[<a href="#T07:21:50" id="T07:21:50"><abbr title="2016-01-06T07:21:50+00:00">07:21:50</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>*is</q></li>
<li class="message">[<a href="#T07:22:01" id="T07:22:01"><abbr title="2016-01-06T07:22:01+00:00">07:22:01</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>EMIF runs at 200 MHz</q></li>
<li class="message">[<a href="#T07:22:12" id="T07:22:12"><abbr title="2016-01-06T07:22:12+00:00">07:22:12</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>the ddr phy macros at 400 MHz</q></li>
<li class="message">[<a href="#T07:22:31" id="T07:22:31"><abbr title="2016-01-06T07:22:31+00:00">07:22:31</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>(there's an implicit /2 divider for the EMIF clock()</q></li>
<li class="message">[<a href="#T07:25:35" id="T07:25:35"><abbr title="2016-01-06T07:25:35+00:00">07:25:35</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>so N=23, M=400, M2=1</q></li>
<li class="message">[<a href="#T07:26:00" id="T07:26:00"><abbr title="2016-01-06T07:26:00+00:00">07:26:00</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>(again assuming 24 MHz osc)</q></li>
<li class="message">[<a href="#T07:28:08" id="T07:28:08"><abbr title="2016-01-06T07:28:08+00:00">07:28:08</abbr></a>] &lt;<cite>yates</cite>&gt; <q>are you referring to the "N" in Figure 8-8?</q></li>
<li class="message">[<a href="#T07:29:19" id="T07:29:19"><abbr title="2016-01-06T07:29:19+00:00">07:29:19</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yeah</q></li>
<li class="message">[<a href="#T07:29:35" id="T07:29:35"><abbr title="2016-01-06T07:29:35+00:00">07:29:35</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>CM_CLKSEL_DPLL_DDR contains N and M</q></li>
<li class="message">[<a href="#T07:29:39" id="T07:29:39"><abbr title="2016-01-06T07:29:39+00:00">07:29:39</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>CM_DIV_M2_DPLL_DDR contains M2</q></li>
<li class="message">[<a href="#T07:29:59" id="T07:29:59"><abbr title="2016-01-06T07:29:59+00:00">07:29:59</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>anyway, I gotto do other stuff</q></li>
<li class="message">[<a href="#T07:30:07" id="T07:30:07"><abbr title="2016-01-06T07:30:07+00:00">07:30:07</abbr></a>] &lt;<cite>yates</cite>&gt; <q>ok.</q></li>
<li class="join">[<a href="#T07:35:10" id="T07:35:10"><abbr title="2016-01-06T07:35:10+00:00">07:35:10</abbr></a>] <span>* rob_w (~rob@unaffiliated/rob-w/x-1112029) has joined #beagle</span></li>
<li class="quit">[<a href="#T07:51:12" id="T07:51:12"><abbr title="2016-01-06T07:51:12+00:00">07:51:12</abbr></a>] <span>* nighty-_ (~nighty@s229123.ppp.asahi-net.or.jp) Quit (Quit: Disappears in a puff of smoke)</span></li>
<li class="join">[<a href="#T07:56:41" id="T07:56:41"><abbr title="2016-01-06T07:56:41+00:00">07:56:41</abbr></a>] <span>* nighty^ (~nighty@s229123.ppp.asahi-net.or.jp) has joined #beagleboard</span></li>
<li class="join">[<a href="#T08:03:52" id="T08:03:52"><abbr title="2016-01-06T08:03:52+00:00">08:03:52</abbr></a>] <span>* bearsh|work (~quassel@252.212.107.92.dynamic.wline.res.cust.swisscom.ch) has joined #beagle</span></li>
<li class="join">[<a href="#T08:06:05" id="T08:06:05"><abbr title="2016-01-06T08:06:05+00:00">08:06:05</abbr></a>] <span>* c10ud (~c10ud@emesene/dictator/c10ud) has joined #beagle</span></li>
<li class="join">[<a href="#T08:13:11" id="T08:13:11"><abbr title="2016-01-06T08:13:11+00:00">08:13:11</abbr></a>] <span>* jpirko (~jirka@ip-94-113-120-24.net.upcbroadband.cz) has joined #beagle</span></li>
<li class="quit">[<a href="#T08:23:20" id="T08:23:20"><abbr title="2016-01-06T08:23:20+00:00">08:23:20</abbr></a>] <span>* NulL` (~bleh1@87.254.84.90) Quit (Ping timeout: 260 seconds)</span></li>
<li class="join">[<a href="#T08:31:42" id="T08:31:42"><abbr title="2016-01-06T08:31:42+00:00">08:31:42</abbr></a>] <span>* florian (~fuchs@Maemo/community/contributor/florian) has joined #beagle</span></li>
<li class="join">[<a href="#T08:34:32" id="T08:34:32"><abbr title="2016-01-06T08:34:32+00:00">08:34:32</abbr></a>] <span>* tomeff (~tomeff@ip-89-176-75-234.net.upcbroadband.cz) has joined #beagle</span></li>
<li class="join">[<abbr title="2016-01-06T08:34:32+00:00">08:34:32</abbr>] <span>* tomeff (~tomeff@ip-89-176-75-234.net.upcbroadband.cz) has joined #beagleboard</span></li>
<li class="join">[<abbr title="2016-01-06T08:34:32+00:00">08:34:32</abbr>] <span>* tomeff (~tomeff@ip-89-176-75-234.net.upcbroadband.cz) has joined #beaglebone</span></li>
<li class="join">[<a href="#T08:47:37" id="T08:47:37"><abbr title="2016-01-06T08:47:37+00:00">08:47:37</abbr></a>] <span>* nerienna (~nerienna@p5491FC1D.dip0.t-ipconnect.de) has joined #beagle</span></li>
<li class="join">[<a href="#T08:54:17" id="T08:54:17"><abbr title="2016-01-06T08:54:17+00:00">08:54:17</abbr></a>] <span>* manuel_ (~manuel@p549C4CBF.dip0.t-ipconnect.de) has joined #beagle</span></li>
<li class="join">[<a href="#T08:55:15" id="T08:55:15"><abbr title="2016-01-06T08:55:15+00:00">08:55:15</abbr></a>] <span>* nerienna_ (~nerienna@p5498E151.dip0.t-ipconnect.de) has joined #beagle</span></li>
<li class="quit">[<a href="#T08:57:41" id="T08:57:41"><abbr title="2016-01-06T08:57:41+00:00">08:57:41</abbr></a>] <span>* nerienna (~nerienna@p5491FC1D.dip0.t-ipconnect.de) Quit (Ping timeout: 246 seconds)</span></li>
<li class="quit">[<a href="#T09:14:31" id="T09:14:31"><abbr title="2016-01-06T09:14:31+00:00">09:14:31</abbr></a>] <span>* c10ud (~c10ud@emesene/dictator/c10ud) Quit (Quit: cya)</span></li>
<li class="quit">[<a href="#T09:15:23" id="T09:15:23"><abbr title="2016-01-06T09:15:23+00:00">09:15:23</abbr></a>] <span>* contempt (contempt@unaffiliated/contempt) Quit (Ping timeout: 276 seconds)</span></li>
<li class="join">[<a href="#T09:18:41" id="T09:18:41"><abbr title="2016-01-06T09:18:41+00:00">09:18:41</abbr></a>] <span>* noobkit (~Nerazim@94.99.236.119) has joined #beagle</span></li>
<li class="join">[<a href="#T09:19:49" id="T09:19:49"><abbr title="2016-01-06T09:19:49+00:00">09:19:49</abbr></a>] <span>* Paul_ (6c1c4d41@gateway/web/freenode/ip.108.28.77.65) has joined #beagle</span></li>
<li class="join">[<a href="#T09:21:10" id="T09:21:10"><abbr title="2016-01-06T09:21:10+00:00">09:21:10</abbr></a>] <span>* contempt (contempt@unaffiliated/contempt) has joined #beagleboard</span></li>
<li class="join">[<abbr title="2016-01-06T09:21:10+00:00">09:21:10</abbr>] <span>* contempt (contempt@unaffiliated/contempt) has joined #beagle</span></li>
<li class="message">[<a href="#T09:22:16" id="T09:22:16"><abbr title="2016-01-06T09:22:16+00:00">09:22:16</abbr></a>] &lt;<cite>Paul_</cite>&gt; <q>my BBB O/S 3.8.13-bone30 ubuntu started crashing every few days, so I created a Debian image 4.1.12-ti-r29, but it seems very slow by comparison.</q></li>
<li class="quit">[<a href="#T09:22:24" id="T09:22:24"><abbr title="2016-01-06T09:22:24+00:00">09:22:24</abbr></a>] <span>* manuel_ (~manuel@p549C4CBF.dip0.t-ipconnect.de) Quit (Quit: manuel_)</span></li>
<li class="message">[<a href="#T09:23:56" id="T09:23:56"><abbr title="2016-01-06T09:23:56+00:00">09:23:56</abbr></a>] &lt;<cite>Paul_</cite>&gt; <q>Any suggestions which O/S  image I should install so the board is stable and fast like ubuntu</q></li>
<li class="quit">[<a href="#T09:31:56" id="T09:31:56"><abbr title="2016-01-06T09:31:56+00:00">09:31:56</abbr></a>] <span>* Paul_ (6c1c4d41@gateway/web/freenode/ip.108.28.77.65) Quit (Quit: Page closed)</span></li>
<li class="message">[<a href="#T09:34:44" id="T09:34:44"><abbr title="2016-01-06T09:34:44+00:00">09:34:44</abbr></a>] &lt;<cite>tbr</cite>&gt; <q>install latest official images, and see how that fares?</q></li>
<li class="quit">[<a href="#T09:36:37" id="T09:36:37"><abbr title="2016-01-06T09:36:37+00:00">09:36:37</abbr></a>] <span>* abhi_ (0117d3d2@gateway/web/freenode/ip.1.23.211.210) Quit (Quit: Page closed)</span></li>
<li class="join">[<a href="#T09:40:41" id="T09:40:41"><abbr title="2016-01-06T09:40:41+00:00">09:40:41</abbr></a>] <span>* citylight2 (~me@bzq-218-29-26.cablep.bezeqint.net) has joined #beagle</span></li>
<li class="join">[<a href="#T09:55:14" id="T09:55:14"><abbr title="2016-01-06T09:55:14+00:00">09:55:14</abbr></a>] <span>* florian_kc (~fuchs@Maemo/community/contributor/florian) has joined #beagle</span></li>
<li class="join">[<a href="#T09:57:29" id="T09:57:29"><abbr title="2016-01-06T09:57:29+00:00">09:57:29</abbr></a>] <span>* Akex_ (uid58281@gateway/web/irccloud.com/x-tgojngsqwdfuodpy) has joined #beagle</span></li>
<li class="quit">[<a href="#T09:57:38" id="T09:57:38"><abbr title="2016-01-06T09:57:38+00:00">09:57:38</abbr></a>] <span>* florian (~fuchs@Maemo/community/contributor/florian) Quit (Ping timeout: 276 seconds)</span></li>
<li class="join">[<a href="#T09:57:52" id="T09:57:52"><abbr title="2016-01-06T09:57:52+00:00">09:57:52</abbr></a>] <span>* gpio (~jack@silicon.xs4all.nl) has joined #beagle</span></li>
<li class="quit">[<a href="#T10:09:46" id="T10:09:46"><abbr title="2016-01-06T10:09:46+00:00">10:09:46</abbr></a>] <span>* magra (manisha@nat/ti/x-ykgzimjakdbghvbj) Quit (Remote host closed the connection)</span></li>
<li class="join">[<a href="#T10:10:12" id="T10:10:12"><abbr title="2016-01-06T10:10:12+00:00">10:10:12</abbr></a>] <span>* magra (manisha@nat/ti/x-cksbrfbxetuewbsa) has joined #beagle</span></li>
<li class="nick-change">[<a href="#T10:10:59" id="T10:10:59"><abbr title="2016-01-06T10:10:59+00:00">10:10:59</abbr></a>] <span>* florian_kc is now known as florian</span></li>
<li class="quit">[<a href="#T10:18:41" id="T10:18:41"><abbr title="2016-01-06T10:18:41+00:00">10:18:41</abbr></a>] <span>* praneeth (~praneeth@192.91.75.12) Quit (Remote host closed the connection)</span></li>
<li class="join">[<a href="#T10:19:06" id="T10:19:06"><abbr title="2016-01-06T10:19:06+00:00">10:19:06</abbr></a>] <span>* praneeth (praneeth@nat/ti/x-adpwapgiwybdpeun) has joined #beagle</span></li>
<li class="join">[<a href="#T10:21:52" id="T10:21:52"><abbr title="2016-01-06T10:21:52+00:00">10:21:52</abbr></a>] <span>* Devastator (~devas@unaffiliated/devastator) has joined #beagle</span></li>
<li class="quit">[<a href="#T10:27:13" id="T10:27:13"><abbr title="2016-01-06T10:27:13+00:00">10:27:13</abbr></a>] <span>* Shadyman (~matthew@unaffiliated/shadyman) Quit (Quit: Leaving.)</span></li>
<li class="quit">[<a href="#T10:35:54" id="T10:35:54"><abbr title="2016-01-06T10:35:54+00:00">10:35:54</abbr></a>] <span>* Ceriand|desktop (~Ceriand@unaffiliated/ceriand) Quit (Quit: Leaving.)</span></li>
<li class="join">[<a href="#T10:41:23" id="T10:41:23"><abbr title="2016-01-06T10:41:23+00:00">10:41:23</abbr></a>] <span>* franzp (~AndChat10@cpe90-146-82-220.liwest.at) has joined #beagle</span></li>
