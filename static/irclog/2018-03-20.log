<li class="join">[<a href="#T00:00:53" id="T00:00:53"><abbr title="2018-03-20T00:00:53+00:00">00:00:53</abbr></a>] <span>* BeagleBot (~PircBot@52.26.75.20) has joined #beagle</span></li>
<li class="topic">[<abbr title="2018-03-20T00:00:53+00:00">00:00:53</abbr>] <span>* Topic is '<a href="http://bbb.io/chat">http://bbb.io/chat</a> has a guide on how to ask questions and links to the logs | never ask to ask, just ask | be patient | pastebin a boot log | <a href="http://bbb.io/boot">http://bbb.io/boot</a> | <a href="http://bbb.io/start">http://bbb.io/start</a> | <a href="http://bbb.io/latest">http://bbb.io/latest</a> | <a href="http://bbb.io/bone101">http://bbb.io/bone101</a> | books: <a href="http://bbb.io/books'">http://bbb.io/books'</a></span></li>
<li class="topic">[<abbr title="2018-03-20T00:00:53+00:00">00:00:53</abbr>] <span>* Set by jkridner!~jkridner@pdpc/supporter/active/jkridner on Wed May 24 15:57:17 UTC 2017</span></li>
<li class="join">[<abbr title="2018-03-20T00:00:53+00:00">00:00:53</abbr>] <span>* BeagleBot (~PircBot@52.26.75.20) has joined #beagleboard</span></li>
<li class="join">[<abbr title="2018-03-20T00:00:53+00:00">00:00:53</abbr>] <span>* BeagleBot (~PircBot@52.26.75.20) has joined #beaglebone</span></li>
<li class="message">[<a href="#T00:02:22" id="T00:02:22"><abbr title="2018-03-20T00:02:22+00:00">00:02:22</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>sbco &amp;r10, c24, 0, 8*4    is basically   memcpy( c24+0, &amp;r10, 8*4 );   if we pretended for a moment you could pass a pointer into the register file to memcpy ;)</q></li>
<li class="message">[<a href="#T00:03:03" id="T00:03:03"><abbr title="2018-03-20T00:03:03+00:00">00:03:03</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>c24 is a constant register that is zero by default</q></li>
<li class="message">[<a href="#T00:03:32" id="T00:03:32"><abbr title="2018-03-20T00:03:32+00:00">00:03:32</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Nice! I didn't realize you added that bit at the bottom.</q></li>
<li class="message">[<a href="#T00:04:40" id="T00:04:40"><abbr title="2018-03-20T00:04:40+00:00">00:04:40</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>So I'll need to set c24 to the correct address?</q></li>
<li class="message">[<a href="#T00:04:41" id="T00:04:41"><abbr title="2018-03-20T00:04:41+00:00">00:04:41</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Just like in your example?</q></li>
<li class="message">[<a href="#T00:05:03" id="T00:05:03"><abbr title="2018-03-20T00:05:03+00:00">00:05:03</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>oh I just showed this for testing</q></li>
<li class="message">[<a href="#T00:05:12" id="T00:05:12"><abbr title="2018-03-20T00:05:12+00:00">00:05:12</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>What is a constant register anyway?</q></li>
<li class="message">[<a href="#T00:05:19" id="T00:05:19"><abbr title="2018-03-20T00:05:19+00:00">00:05:19</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Seems pointless</q></li>
<li class="message">[<a href="#T00:05:32" id="T00:05:32"><abbr title="2018-03-20T00:05:32+00:00">00:05:32</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>i.e. this just stores the data into the pru core's local dram</q></li>
<li class="message">[<a href="#T00:05:41" id="T00:05:41"><abbr title="2018-03-20T00:05:41+00:00">00:05:41</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Gotcha,</q></li>
<li class="message">[<a href="#T00:05:42" id="T00:05:42"><abbr title="2018-03-20T00:05:42+00:00">00:05:42</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>so you can access it in python via   core.dram.map( c_uint32 * 8 )</q></li>
<li class="message">[<a href="#T00:06:10" id="T00:06:10"><abbr title="2018-03-20T00:06:10+00:00">00:06:10</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>So it stores it in dram address 0?</q></li>
<li class="message">[<a href="#T00:06:52" id="T00:06:52"><abbr title="2018-03-20T00:06:52+00:00">00:06:52</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>the constant registers are various useful base addresses for load/store instructions.  here's the list for the am335x: <a href="https://pastebin.com/raw/JRZefuT3">https://pastebin.com/raw/JRZefuT3</a></q></li>
<li class="message">[<a href="#T00:07:15" id="T00:07:15"><abbr title="2018-03-20T00:07:15+00:00">00:07:15</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yes</q></li>
<li class="message">[<a href="#T00:07:55" id="T00:07:55"><abbr title="2018-03-20T00:07:55+00:00">00:07:55</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Oh, I see. That is nice to have</q></li>
<li class="message">[<a href="#T00:08:06" id="T00:08:06"><abbr title="2018-03-20T00:08:06+00:00">00:08:06</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>you can of course also use a normal register as base address instead of a constant register (the instruction then becomes sbbo instead of sbco)</q></li>
<li class="message">[<a href="#T00:08:20" id="T00:08:20"><abbr title="2018-03-20T00:08:20+00:00">00:08:20</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Ok,</q></li>
<li class="message">[<a href="#T00:08:39" id="T00:08:39"><abbr title="2018-03-20T00:08:39+00:00">00:08:39</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Do I need to stop the core to read the dram?</q></li>
<li class="message">[<a href="#T00:08:42" id="T00:08:42"><abbr title="2018-03-20T00:08:42+00:00">00:08:42</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>With core.dram.map?</q></li>
<li class="message">[<abbr title="2018-03-20T00:08:42+00:00">00:08:42</abbr>] &lt;<cite>zmatt</cite>&gt; <q>these mnemonics are weird... I don't understand why they felt the need to give these two different mnemonics in the first place</q></li>
<li class="message">[<a href="#T00:08:46" id="T00:08:46"><abbr title="2018-03-20T00:08:46+00:00">00:08:46</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>certainly not</q></li>
<li class="message">[<a href="#T00:08:51" id="T00:08:51"><abbr title="2018-03-20T00:08:51+00:00">00:08:51</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Ok, cool</q></li>
<li class="message">[<a href="#T00:08:58" id="T00:08:58"><abbr title="2018-03-20T00:08:58+00:00">00:08:58</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>note: you use .map only once using init</q></li>
<li class="message">[<a href="#T00:09:08" id="T00:09:08"><abbr title="2018-03-20T00:09:08+00:00">00:09:08</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>just like the shmem in pruss-ddr-ping</q></li>
<li class="message">[<a href="#T00:09:16" id="T00:09:16"><abbr title="2018-03-20T00:09:16+00:00">00:09:16</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Ok</q></li>
<li class="message">[<a href="#T00:11:16" id="T00:11:16"><abbr title="2018-03-20T00:11:16+00:00">00:11:16</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>For the loop command, I'm getting Error: Instruction illegal with specified core version</q></li>
<li class="message">[<a href="#T00:11:29" id="T00:11:29"><abbr title="2018-03-20T00:11:29+00:00">00:11:29</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>I assume I need to tell PASM I'm using V3 core?</q></li>
<li class="message">[<a href="#T00:11:40" id="T00:11:40"><abbr title="2018-03-20T00:11:40+00:00">00:11:40</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>oh, did I patch my pasm to assume V3 by default? that's possible</q></li>
<li class="message">[<a href="#T00:11:43" id="T00:11:43"><abbr title="2018-03-20T00:11:43+00:00">00:11:43</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>in that case yes, -V3</q></li>
<li class="message">[<a href="#T00:12:00" id="T00:12:00"><abbr title="2018-03-20T00:12:00+00:00">00:12:00</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Error gone</q></li>
<li class="message">[<a href="#T00:12:58" id="T00:12:58"><abbr title="2018-03-20T00:12:58+00:00">00:12:58</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>you can dump the eight words with something like</q></li>
<li class="message">[<a href="#T00:13:00" id="T00:13:00"><abbr title="2018-03-20T00:13:00+00:00">00:13:00</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>print(*("%08x" % x for x in shmem[:]))</q></li>
<li class="join">[<abbr title="2018-03-20T00:13:00+00:00">00:13:00</abbr>] <span>* heratntp (~hewttjdg@2001:bc8:4700:2300::1:d07) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:13:02" id="T00:13:02"><abbr title="2018-03-20T00:13:02+00:00">00:13:02</abbr></a>] <span>* heratntp (~hewttjdg@2001:bc8:4700:2300::1:d07) Quit (Client Quit)</span></li>
<li class="message">[<a href="#T00:13:03" id="T00:13:03"><abbr title="2018-03-20T00:13:03+00:00">00:13:03</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>maybe there's a nicer way</q></li>
<li class="message">[<a href="#T00:16:02" id="T00:16:02"><abbr title="2018-03-20T00:16:02+00:00">00:16:02</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Awesome, I'll try that next. I added this snippet to output the code on the T1 pin.</q></li>
<li class="message">[<a href="#T00:16:18" id="T00:16:18"><abbr title="2018-03-20T00:16:18+00:00">00:16:18</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q><a href="https://pastebin.com/XUahnjBc">https://pastebin.com/XUahnjBc</a></q></li>
<li class="message">[<a href="#T00:16:32" id="T00:16:32"><abbr title="2018-03-20T00:16:32+00:00">00:16:32</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>AND IT WORKS! <a href="https://pasteboard.co/HcH6KoQ.png">https://pasteboard.co/HcH6KoQ.png</a></q></li>
<li class="message">[<a href="#T00:17:06" id="T00:17:06"><abbr title="2018-03-20T00:17:06+00:00">00:17:06</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Excuse the skippy hack</q></li>
<li class="message">[<a href="#T00:23:18" id="T00:23:18"><abbr title="2018-03-20T00:23:18+00:00">00:23:18</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Also, I can see the dram values!</q></li>
<li class="message">[<a href="#T00:23:41" id="T00:23:41"><abbr title="2018-03-20T00:23:41+00:00">00:23:41</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q><a href="https://pastebin.com/rNdt6Pwy">https://pastebin.com/rNdt6Pwy</a></q></li>
<li class="quit">[<a href="#T00:24:39" id="T00:24:39"><abbr title="2018-03-20T00:24:39+00:00">00:24:39</abbr></a>] <span>* majuk (~majuk@75-163-148-173.clsp.qwest.net) Quit (Remote host closed the connection)</span></li>
<li class="message">[<a href="#T00:24:41" id="T00:24:41"><abbr title="2018-03-20T00:24:41+00:00">00:24:41</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q><a href="https://pasteboard.co/HcHa3B2.png">https://pasteboard.co/HcHa3B2.png</a></q></li>
<li class="message">[<a href="#T00:25:31" id="T00:25:31"><abbr title="2018-03-20T00:25:31+00:00">00:25:31</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>:)</q></li>
<li class="message">[<a href="#T00:26:14" id="T00:26:14"><abbr title="2018-03-20T00:26:14+00:00">00:26:14</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>So close!!!!</q></li>
<li class="message">[<a href="#T00:26:24" id="T00:26:24"><abbr title="2018-03-20T00:26:24+00:00">00:26:24</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>I can see the samples!</q></li>
<li class="message">[<a href="#T00:27:15" id="T00:27:15"><abbr title="2018-03-20T00:27:15+00:00">00:27:15</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>So to get it working with the ddr memory, can I modify your ddr-ping and pass the address to the pru with core.r[4] = pruss.ddr.address</q></li>
<li class="message">[<a href="#T00:28:02" id="T00:28:02"><abbr title="2018-03-20T00:28:02+00:00">00:28:02</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Then in the pru do something like sbco r10, r4, 0, 8*4</q></li>
<li class="message">[<a href="#T00:28:24" id="T00:28:24"><abbr title="2018-03-20T00:28:24+00:00">00:28:24</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Except, using the ring buffer technique</q></li>
<li class="message">[<a href="#T00:28:56" id="T00:28:56"><abbr title="2018-03-20T00:28:56+00:00">00:28:56</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>sbbo &amp;r10, r4, ..</q></li>
<li class="message">[<a href="#T00:29:02" id="T00:29:02"><abbr title="2018-03-20T00:29:02+00:00">00:29:02</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>but yes</q></li>
<li class="message">[<a href="#T00:29:15" id="T00:29:15"><abbr title="2018-03-20T00:29:15+00:00">00:29:15</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Why the ampersand?</q></li>
<li class="message">[<a href="#T00:29:39" id="T00:29:39"><abbr title="2018-03-20T00:29:39+00:00">00:29:39</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>you're not storing r10, you're storing 32 bytes starting with r10</q></li>
<li class="message">[<a href="#T00:30:09" id="T00:30:09"><abbr title="2018-03-20T00:30:09+00:00">00:30:09</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>like I said earlier:  sbco &amp;r10, c24, 0, 8*4    is basically   memcpy( c24+0, &amp;r10, 8*4 );   if we pretended for a moment you could pass a pointer into the register file to memcpy</q></li>
<li class="message">[<a href="#T00:30:23" id="T00:30:23"><abbr title="2018-03-20T00:30:23+00:00">00:30:23</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Gotcha, ok</q></li>
<li class="message">[<a href="#T00:31:14" id="T00:31:14"><abbr title="2018-03-20T00:31:14+00:00">00:31:14</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>you can load/store any contiguous byte-range of r0-r30</q></li>
<li class="message">[<a href="#T00:31:50" id="T00:31:50"><abbr title="2018-03-20T00:31:50+00:00">00:31:50</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>(although the time it takes depends on how many registers intersect the byterange you load/store)</q></li>
<li class="message">[<a href="#T00:32:12" id="T00:32:12"><abbr title="2018-03-20T00:32:12+00:00">00:32:12</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Ok,</q></li>
<li class="join">[<a href="#T00:39:27" id="T00:39:27"><abbr title="2018-03-20T00:39:27+00:00">00:39:27</abbr></a>] <span>* nighty- (~nighty@kyotolabs.asahinet.com) has joined #beagleboard</span></li>
<li class="join">[<a href="#T00:43:43" id="T00:43:43"><abbr title="2018-03-20T00:43:43+00:00">00:43:43</abbr></a>] <span>* fortnight (fortnight@ip68-226-150-239.lf.br.cox.net) has joined #beagle</span></li>
<li class="message">[<a href="#T00:45:05" id="T00:45:05"><abbr title="2018-03-20T00:45:05+00:00">00:45:05</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>So at main I'm going to do     mov r3, r4  // store the start of the ring buffer</q></li>
<li class="message">[<a href="#T00:45:52" id="T00:45:52"><abbr title="2018-03-20T00:45:52+00:00">00:45:52</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Then after getting one set of 8 ADC samples something like <a href="https://pastebin.com/7GKMPBM9">https://pastebin.com/7GKMPBM9</a></q></li>
<li class="message">[<a href="#T00:46:34" id="T00:46:34"><abbr title="2018-03-20T00:46:34+00:00">00:46:34</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>add 1 ? increment the pointer by 1 byte? :)</q></li>
<li class="message">[<a href="#T00:47:03" id="T00:47:03"><abbr title="2018-03-20T00:47:03+00:00">00:47:03</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>also don't forget the rather important detail of testing if you're reached the end of the buffer and wrapping back to the start</q></li>
<li class="message">[<a href="#T00:47:17" id="T00:47:17"><abbr title="2018-03-20T00:47:17+00:00">00:47:17</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Oh, yeah</q></li>
<li class="message">[<a href="#T00:47:23" id="T00:47:23"><abbr title="2018-03-20T00:47:23+00:00">00:47:23</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>also, it's absolutely essential to store the head pointer in the same memory as the buffer itself, i.e. ddr in this case</q></li>
<li class="message">[<a href="#T00:47:32" id="T00:47:32"><abbr title="2018-03-20T00:47:32+00:00">00:47:32</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Ok,</q></li>
<li class="message">[<a href="#T00:47:41" id="T00:47:41"><abbr title="2018-03-20T00:47:41+00:00">00:47:41</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>So I'll store it at the very beginning</q></li>
<li class="message">[<a href="#T00:48:31" id="T00:48:31"><abbr title="2018-03-20T00:48:31+00:00">00:48:31</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>So I need add r4, r4, 8*4 right? Since I'm adding 8 new samples each 4 bytes</q></li>
<li class="message">[<a href="#T00:48:38" id="T00:48:38"><abbr title="2018-03-20T00:48:38+00:00">00:48:38</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>yup</q></li>
<li class="message">[<a href="#T00:49:02" id="T00:49:02"><abbr title="2018-03-20T00:49:02+00:00">00:49:02</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>What time is it where you are? It's almost 9pm here.</q></li>
<li class="message">[<a href="#T00:49:15" id="T00:49:15"><abbr title="2018-03-20T00:49:15+00:00">00:49:15</abbr></a>] &lt;<cite>zmatt</cite>&gt; <q>01:53</q></li>
<li class="message">[<a href="#T00:49:37" id="T00:49:37"><abbr title="2018-03-20T00:49:37+00:00">00:49:37</abbr></a>] &lt;<cite>hunter235711</cite>&gt; <q>Nice! We'll I really appreciate the help!!!</q></li>
<li class="join">[<a href="#T00:52:28" id="T00:52:28"><abbr title="2018-03-20T00:52:28+00:00">00:52:28</abbr></a>] <span>* majuk (~majuk@75-163-148-173.clsp.qwest.net) has joined #beagle</span></li>
<li class="join">[<a href="#T00:53:13" id="T00:53:13"><abbr title="2018-03-20T00:53:13+00:00">00:53:13</abbr></a>] <span>* xythobuz (~xythobuz@p200300C77BC3400058A079259B0CCEBE.dip0.t-ipconnect.de) has joined #beagle</span></li>
<li class="quit">[<a href="#T00:56:02" id="T00:56:02"><abbr title="2018-03-20T00:56:02+00:00">00:56:02</abbr></a>] <span>* xythobuz_ (~xythobuz@pD9562C2A.dip0.t-ipconnect.de) Quit (Ping timeout: 260 seconds)</span></li>
