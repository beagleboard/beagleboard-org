<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="helma.xsl"?>
<xmlroot xmlns:hop="http://www.helma.org/docs/guide/features/database">
  <hopobject id="2819" name="Ultrasonic_Sensor" prototype="Page" created="1372690591672" lastModified="1569344298227">
  <hop:parent idref="2471" prototyperef="Page"/>
    <is_xhtml type="boolean">true</is_xhtml>
    <http_remotehost>127.0.0.1</http_remotehost>
    <property propertyname="hck.sssn">YWhJWW84QURYQmY5T0hjdTJBUDcvRm1hSFVicXhxR2ZiRkpab1J2OFVIcmU1UW82R0lOQm5mcERWdzRoZkhjYldnWE1rYmpZVk1GYW9qVzZJN0Fva1p5eHBDYVFpOFM0MkRRVkw5YXFEdXIwVk1CM3IxblJPY0l2QVhnZ2F1OHRCSkdGa1N1MU9XVTdvcm02VC85Z1Rodk1RakFLNU1rR29jNExJbTh6R0JXdDZkQ1lyU0NhamF4aFNQZUJwZGVLdEliNnJUWXh3K2JWWGhYQTgydXlBOTZHZjg1Mmh4VFIvLy8vVmQzcVRrK2p5YnZYRUdZTGplUDF5eGVDODlwakFRSWpGWjZUdHppa2dzV0h0NlpSSGZ5dWx0c2k4V2wrbXRRK2hEcC81RTN0ZjNUMSsvUzdEYkQ4S01wSFFNMUdZVmdHS1lnZ3NtbG92MnZ3VDNWNTJpd24xczU0ZXdlblFZOHBHc2x2RVhVPS0tZTQ2ZVQvSlJLdVRNQlJPckhnaTVIZz09--b8210cd144c069ace8c5cb93ab2203e3aa9ee43c</property>
    <property propertyname="hck.rut">BAhbCFsGaQJGn0kiQSQyYSQxMCRxenouRzBhelRHM3NiOFY4dFVJc08uR3dZaHpPVzdnUnhZbDc0UVJaUVFVb2IzejJvNDdFLgY6BkVUSSIXMTU2ODczMzU4Ni40ODQ5ODU0BjsARg==--711a801a6a561986adfa8f215a428458c139456c</property>
    <http_language>en-US,en;q=0.9</http_language>
    <uri>Ultrasonic_Sensor</uri>
    <http_browser>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/76.0.3809.100 Chrome/76.0.3809.100 Safari/537.36</http_browser>
    <time type="date">24.09.2019 16:58:18 UTC</time>
    <property propertyname="hck.usi">1</property>
    <hopsession>127.0.0.1ctydwl09yy13</hopsession>
    <tk_tc>QHtknzMp8cj3h+TI</tk_tc>
    <mcpopupclosed>yes</mcpopupclosed>
    <body>&lt;script src=&quot;/static/bonescript-demo.js&quot;&gt;&lt;/script&gt;
&lt;div id=&apos;side-menu&apos; class=&quot;t3_sidebar&quot;&gt;
    &lt;ul class=&quot;left-menu&quot;&gt;&lt;strong&gt;Navigation&lt;/strong&gt;
        &lt;li&gt;&lt;a href=&quot;/static/side-menu.html&quot;&gt;Menu contents&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;t3_content_1&quot;&gt;&lt;div id=&apos;connect-status&apos;&gt;&lt;/div&gt;&lt;div id=&quot;content_child&quot;&gt;
&lt;h1&gt;Demo: Maxbotic Ultrasonic Sensor&lt;/h1&gt;
&lt;p&gt;The &lt;a href=&quot;http://www.maxbotix.com/Ultrasonic_Sensors/MB1020.htm&quot;&gt;LV-MaxSonar-EZ2 High Performance Sonar Range Finder&lt;/a&gt; provides very short
to long-range detection and ranging, in an incredibly small package. The sonar
detects objects from 0-254 inches and provides sonar range information from 6-inches
out to 254-inches with 1-inch resolution.
&lt;/p&gt;
&lt;i&gt;Note: Each time after the Sonar is powered up, it will calibrate
during its first read cycle. The sensor uses this stored 
information to range a near object. It is important that objects
not be close to the sensor during this calibration cycle. The
best sensitivity is obtained when it is clear for fourteen 
inches, but good results are common when clear for at least
seven inches. If an object is too bear the Sonar during the calibration
cycle, the sensor may then ignore the objects at that distance.
To calibrate the LV-MAX Sonar, cycle power then command a read
cycle.&lt;/i&gt;&lt;br&gt;&lt;br&gt;

The AN pin outputs a voltage with a scaling factor of (V&lt;sub&gt;cc&lt;/sub&gt;/512) per inch. Since the AIN pin has a maximum voltage capacity of 1.8V, we will set a voltage divider to account for that difference. With the voltage divider, a supply of 5V yields ~6.99mV/in. and 3.3V yields ~4.57mV/in.
&lt;br&gt;



&lt;h2&gt;Example
 &lt;button class=&quot;dynlink&quot; onclick=&quot;demoRun(&apos;code&apos;)&quot;&gt;run&lt;/button&gt;
 &lt;button class=&quot;dynlink&quot; onclick=&quot;demoRestore(&apos;code&apos;)&quot;&gt;restore&lt;/button&gt;
&lt;/h2&gt;
&lt;pre id=&quot;code&quot; class=&quot;use-editor&quot; style=&quot;height:310px;&quot;&gt;
var b = require(&apos;bonescript&apos;);
var analogVoltage = 0;

/* Check the sensor values every 2 seconds*/
setInterval(read, 2000);

function read(){
    b.analogRead(&apos;P9_40&apos;, printStatus);
}

function printStatus(x) {
    var distanceInches;
    analogVoltage = x.value*1.8; // ADC Value converted to voltage
    console.log(&apos;x.value = &apos; + analogVoltage); 
    distanceInches = analogVoltage / 0.00699;
    console.log(&quot;There is an object &quot; + 
    parseFloat(distanceInches).toFixed(3) + &quot; inches away.&quot;);
}
&lt;/pre&gt;
&lt;div readonly id=&apos;console-output&apos; style=&quot;height:100px;&quot;&gt;&lt;/div&gt;
&lt;br&gt;&lt;/br&gt;
&lt;!-- &lt;img align=&quot;right&quot; width=&quot;60%&quot; src=&quot;http://beagleboard.org/static/uploads/VD%20Ultrasonic%20Sensor.PNG&quot;/&gt; --&gt;
&lt;br&gt;&lt;/br&gt;
&lt;h2&gt;Build and execute instructions&lt;/h2&gt;
&lt;ul&gt;
 &lt;li&gt;Connect the &quot;GND&quot; pin from the sensor to P9_1 of the board&lt;/li&gt;
 &lt;li&gt;Connect the &quot;+5V&quot; pin from the sensor to P9_3 (3.3V) of the board&lt;/li&gt;
 &lt;li&gt;Connect the 1.2kohm resistor to the AN pin of the supersonic sensor.&lt;/li&gt;
 &lt;li&gt;Connect the 3k ohm resistor in series with the 1.2k ohm resistor and tie the bottom to ground, as shown in the diagram.&lt;/li&gt;
 &lt;li&gt;Connect P9_40 of BeagleBone in series with the 3k ohm and 1.k ohm resistor.&lt;/li&gt;
 &lt;li&gt;Click &quot;Run&quot; on the code and it will output the distance, in inches, that the
 sensor is detecting... updating every 5 seconds&lt;/li&gt;
 &lt;li&gt;Move the sensor nearer to or farther from an object to see the change in distance&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;See also&lt;/h2&gt;
&lt;h3&gt;Related functions&lt;/h3&gt;
&lt;ul&gt;
 &lt;li&gt;&lt;a href=&quot;/Support/BoneScript/#require&quot;&gt;require&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;/Support/BoneScript/analogRead/&quot;&gt;analogRead&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://beagleboard.org/Support/BoneScript/#timers&quot;&gt;setInterval&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Where to buy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt; &lt;a href=&quot;http://elinux.org/CircuitCo:BeagleBone_Breadboard#Distributors&quot;&gt;BreadBoard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.sparkfun.com/products/11026&quot;&gt;Jumper wires&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href=&quot;https://www.sparkfun.com/search/products?sort_by=relevance%7Casc&amp;per_page=500&amp;term=resistor&quot;&gt;Resistors&lt;/a&gt;&lt;/li&gt;
 &lt;li&gt;&lt;a href=&quot;http://www.adafruit.com/products/980&quot;&gt;Ultrasonic sensor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;See it in action&lt;/h2&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;//www.youtube.com/embed/SFdKIRi7T3s&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;</body>
    <pseudoparent idref="2471" prototyperef="Page"/>
    <pvcount type="float">21518.0</pvcount>
    <http_referer>http://beagleboard.org/support/BoneScript/Ultrasonic_Sensor/tide</http_referer>
    <http_host>127.0.0.1:8080</http_host>
    <user>default</user>
    <lang>en-us</lang>
  </hopobject>
</xmlroot>
