# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

#server {
	#listen   80; ## listen for ipv4; this line is default and implied
	#listen   [::]:80 default ipv6only=on; ## listen for ipv6

	#root /usr/share/nginx/www;
	#index index.html index.htm;

	# Make site accessible from http://localhost/
	#server_name localhost;

	#location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to index.html
		#try_files $uri $uri/ /index.html;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	#}

	#location /doc/ {
		#alias /usr/share/doc/;
		#autoindex on;
		#allow 127.0.0.1;
		#deny all;
	#}

	# Only for nginx-naxsi : process denied requests
	#location /RequestDenied {
		# For example, return an error code
		#return 418;
	#}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/www;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	#	# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#	fastcgi_index index.php;
	#	include fastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
#}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1;
#	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ /index.html;
#	}
#}

server {
	listen 80;
	server_name bbb.io;
	return 301 https://beagleboard.org$request_uri;
}

server {
	listen 443;
	server_name bbb.io;
	ssl_certificate /etc/letsencrypt/live/bbb.io/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/bbb.io/privkey.pem;
	return 301 https://beagleboard.org$request_uri;
}

server {
	listen 80;
	server_name beagleb.one;
	return 301 https://beagleboard.org$request_uri;
}

server {
	listen 443;
	server_name beagleb.one;
	ssl_certificate /etc/letsencrypt/live/bbb.io/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/bbb.io/privkey.pem;
	return 301 https://beagleboard.org$request_uri;
}

server {
	listen 80;
	server_name beagleboard.cn;
	return 301 https://beagleboard.org$request_uri;
}

server {
	listen 443;
	server_name beagleboard.cn;
	ssl_certificate /etc/letsencrypt/live/bbb.io/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/bbb.io/privkey.pem;
	return 301 https://beagleboard.org$request_uri;
}

server {
	listen 80;
	server_name beaglebone.cn;
	return 301 https://beagleboard.org$request_uri;
}

server {
	listen 443;
	server_name beaglebone.cn;
	ssl_certificate /etc/letsencrypt/live/bbb.io/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/bbb.io/privkey.pem;
	return 301 https://beagleboard.org$request_uri;
}

server {
	listen 80;
	server_name www.beagleboard.net 52.26.75.20;
	return 301 https://beagleboard.net$request_uri;
}

server {
	listen 443 ssl;
	server_name www.beagleboard.net 52.26.75.20;
	ssl_certificate /etc/letsencrypt/live/beagleboard.net/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/beagleboard.net/privkey.pem;
	return 301 https://beagleboard.net$request_uri;
}

server {
	listen 80;
	listen 443 ssl;
	server_name beagleboard.net;
	ssl_certificate /etc/letsencrypt/live/beagleboard.net/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/beagleboard.net/privkey.pem;

	location / {
		proxy_pass	http://127.0.0.1:8080;
		gzip		on;
		gzip_min_length	1000;
		gzip_vary on;
		gzip_proxied expired no-cache no-store private auth;
		gzip_types text/plain text/css text/xml text/javascript test/html application/x-javascript;
		gzip_disable "MSIE [1-6]\.";

		location /static {
			add_header Cache-Control max-age=86400;
			proxy_pass	http://127.0.0.1:8080/static;
		}
	}

}

server {
	listen 80;
	listen 443 ssl;
	server_name	debexpo.beagleboard.net;
	ssl_certificate /etc/letsencrypt/live/beagleboard.net/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/beagleboard.net/privkey.pem;

	location / {
		proxy_pass	http://127.0.0.1:5000;
	}
}

server {
	listen 80;
	listen 443 ssl;
	server_name	builds.beagleboard.net;
	ssl_certificate /etc/letsencrypt/live/beagleboard.net/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/beagleboard.net/privkey.pem;

	location / {
		proxy_pass	http://127.0.0.1:8010;
	}
}

server {
	listen 80;
	listen 443 ssl;
	server_name	debian.beagleboard.net;
	ssl_certificate /etc/letsencrypt/live/beagleboard.net/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/beagleboard.net/privkey.pem;
	root /mnt/debian/;

	location / {
		autoindex on;
	}
}

server {
	listen 80;
	server_name www.beagleboard.org;
	return 301 https://beagleboard.org$request_uri;
}

server {
	listen 443;
	server_name www.beagleboard.org;
	ssl_certificate /etc/letsencrypt/live/beagleboard.org/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/beagleboard.org/privkey.pem;
	return 301 https://beagleboard.org$request_uri;
}

server {
	listen 80;
	listen [::]:80 ipv6only=on;
	listen 443 ssl;
	listen [::]:443 ssl ipv6only=on;
	server_name beagleboard.org;
	ssl_certificate /etc/letsencrypt/live/beagleboard.org/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/beagleboard.org/privkey.pem;

	location / {
		proxy_pass	http://127.0.0.1:8080;
		gzip		on;
		gzip_min_length	1000;
		gzip_vary on;
		gzip_proxied expired no-cache no-store private auth;
		gzip_types text/plain text/css text/xml text/javascript test/html application/x-javascript;
		gzip_disable "MSIE [1-6]\.";

		location /static {
			add_header Cache-Control max-age=86400;
			proxy_pass	http://127.0.0.1:8080/static;
		}
	}

}

server {
	listen 80;
	listen 443;
	server_name	debexpo.beagleboard.org;
	ssl_certificate /etc/letsencrypt/live/beagleboard.org/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/beagleboard.org/privkey.pem;

	location / {
		proxy_pass	http://127.0.0.1:5000;
	}
}

server {
	listen 80;
	listen 443;
	server_name	builds.beagleboard.org;
	ssl_certificate /etc/letsencrypt/live/beagleboard.org/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/beagleboard.org/privkey.pem;

	location / {
		proxy_pass	http://127.0.0.1:8010;
	}
}

server {
	listen 80;
	listen 443;
	server_name	debian.beagleboard.org;
	ssl_certificate /etc/letsencrypt/live/beagleboard.org/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/beagleboard.org/privkey.pem;
	root /mnt/debian/;

	location / {
		autoindex on;
	}
}

